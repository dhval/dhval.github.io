<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dhval Mudawal</title>
    <description>Rants</description>
    <link>http://udaytv.github.io</link>
    <atom:link href="http://udaytv.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Understanding IPv6</title>
        <description>&lt;p&gt;&lt;en-note&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;No &lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;Broadcast, only multicast i.e a special multicast address. All host interested in multicast packet join multicast group first. &lt;span style=&quot;font-size: 16px;&quot;&gt;IPv6 supports any-cast i.e multiple host having same &lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;address&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;. Router forwards the packet to nearest any cast server. &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;No NAT, multiple IP addresses per interface. Every inf. has link-local and a global scope address for internet/external net. Global unicast address is generated using Interface Identifier ( Mac address ).&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;Equivalent of loop back address (127.0.0.1) is ::1/128&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; float: none; background-color: rgb(255, 255, 255);&quot;&gt;An IPv6 address is made of 128 bits divided into eight 16-bits blocks. Each block is then converted into 4-digit Hexadecimal numbers separated by colon symbols.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;IPv6 provides some rules to shorten the address.&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;
&lt;blockquote style=&quot;box-sizing: border-box; font-size: 14px; border-left-width: 5px; border-left-style: solid; border-left-color: rgb(233, 233, 233); color: rgb(0, 0, 0); padding: 15px 15px 7px; font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(249, 249, 249);&quot;&gt;2001:0000:3238:DFE1:0063:0000:0000:FEFB&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div style=&quot;box-sizing: border-box; word-wrap: break-word; padding: 0px; text-align: justify; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;&quot;&gt;
&lt;div&gt;&lt;span style=&quot;font-family: &#39;Open Sans&#39;, Arial, sans-serif;&quot;&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;Rule.1:&lt;/b&gt; Discard leading Zero(es):  In Block 5, 0063, the leading two 0s can be omitted.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: &#39;Open Sans&#39;, Arial, sans-serif;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;blockquote style=&quot;box-sizing: border-box; font-size: 14px; border-left-width: 5px; border-left-style: solid; border-left-color: rgb(233, 233, 233); color: rgb(0, 0, 0); padding: 15px 15px 7px; font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(249, 249, 249);&quot;&gt;2001:0000:3238:DFE1:63:0000:0000:FEFB&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div style=&quot;box-sizing: border-box; color: rgb(0, 0, 0); word-wrap: break-word; padding: 0px; text-align: justify; font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;&quot;&gt;
&lt;div&gt;&lt;b style=&quot;box-sizing: border-box;&quot;&gt;Rule.2:&lt;/b&gt; If two of more blocks contain consecutive zeroes like block 6 &amp;amp; 7, omit them all and replace with double colon sign ::&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;blockquote style=&quot;box-sizing: border-box; font-size: 14px; border-left-width: 5px; border-left-style: solid; border-left-color: rgb(233, 233, 233); color: rgb(0, 0, 0); padding: 15px 15px 7px; font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(249, 249, 249);&quot;&gt;2001:0000:3238:DFE1:63::FEFB&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div style=&quot;box-sizing: border-box; color: rgb(0, 0, 0); word-wrap: break-word; padding: 0px; text-align: justify; font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px;&quot;&gt;
&lt;div&gt;          If there are still blocks of zeroes in the address like block 2, they can be shrunk down to a single zero.&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;blockquote style=&quot;box-sizing: border-box; font-size: 14px; border-left-width: 5px; border-left-style: solid; border-left-color: rgb(233, 233, 233); color: rgb(0, 0, 0); padding: 15px 15px 7px; font-family: &#39;Open Sans&#39;, Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(249, 249, 249);&quot;&gt;2001:0:3238:DFE1:63::FEFB&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;Bonus points if they can show you they&amp;#39;ve been through the Hurricane Electric schpiel.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: &#39;Open Sans&#39;, Arial, sans-serif;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;Resources -&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://www.tutorialspoint.com/ipv6/&quot;&gt;http://www.tutorialspoint.com/ipv6/&lt;/a&gt;&lt;/div&gt;
&lt;/en-note&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 21 Aug 2015 00:00:00 -0400</pubDate>
        <link>http://udaytv.github.io/Understanding.IPv6/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Understanding.IPv6/</guid>
      </item>
    
      <item>
        <title>Dot &amp; Cross product of vectors</title>
        <description>&lt;p&gt;&lt;en-note&gt;
&lt;div&gt;&lt;font color=&quot;#222222&quot; face=&quot;Georgia&quot;&gt;Vector is an object with magnitude and direction. Vector product has lot of application in solving directed graphs.&lt;/font&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34);&quot;&gt;&lt;span style=&quot;font-size: 100%;&quot;&gt;In Euclidean space, a Euclidean vector is a geometrical object that possesses both a magnitude and a direction. A vector can be pictured as an arrow. Its magnitude is its length, and its direction is the direction the arrow points. The magnitude of a vector A is denoted by&lt;/span&gt;&lt;span style=&quot;font-size: 100%;&quot;&gt; ||A||. &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;background-image: url(http://cdn.sstatic.net/math/img/bg-site.png?v=09a720444763); background-color: rgb(255, 255, 255); background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;
&lt;div style=&quot;box-sizing: content-box; background-color: rgb(254, 254, 254); text-align: left;&quot;&gt;
&lt;table style=&quot;font-weight: inherit; font-style: inherit; font-variant: inherit;&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;vertical-align: top;&quot;&gt;
&lt;div style=&quot;word-wrap: break-word;&quot;&gt;
&lt;div style=&quot;margin: 0px 0px 1em; padding: 0px; border: 0px; clear: both;&quot;&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34);&quot;&gt;&lt;span style=&quot;font-size: 100%;&quot;&gt;Dot product of two Euclidean vectors A and B is defined by&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; font-style: normal; font-weight: normal; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; transition: none; vertical-align: 0px; text-decoration: none; min-width: 28.892em;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; min-width: 28.892em;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; clip: rect(3.066em 1000.003em 4.447em -999.997em); top: -4.021em; left: 0.003em;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; min-width: 32.075em;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; min-width: 28.892em;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; clip: rect(-0.958em 1000.003em 0.423em -999.997em); top: 0.003em; left: 330px;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; clip: rect(3.186em 1000.003em 4.447em -999.997em); top: -4.021em; left: 0.003em;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; clip: rect(3.186em 1000.003em 4.447em -999.997em); top: -3.961em; left: 217.515625px;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral; font-weight: bold;&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.243em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;⋅&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.243em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral; font-weight: bold;&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.303em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.303em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;∥&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral; font-weight: bold;&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;∥&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;∥&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral; font-weight: bold;&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;∥&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.183em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;cos&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.183em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Italic;&quot;&gt;θ&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;,&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.183em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;where &lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Italic;&quot;&gt;θ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt; is the angle between &lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Italic;&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt; and &lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Italic;&quot;&gt;B&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;margin: 0px 0px 1em; padding: 0px; border: 0px; clear: both;&quot;&gt;
&lt;div style=&quot;text-indent: 0px; margin: 1em 0em; border: 0px; text-align: center; position: relative; padding: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; width: 100%; display: block;&quot;&gt;
&lt;div style=&quot;padding: 0px; border: 0px; font-size: 15px; clear: both; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(254, 254, 254);&quot;&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34);&quot;&gt;We can compute (determine) the angle between two vectors, given their coordinates:&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; font-style: normal; font-weight: normal; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; clip: rect(1.024em 1000.003em 3.667em -999.997em); top: -2.58em; left: 0.003em;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;cos&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.183em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Italic;&quot;&gt;θ&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.303em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.303em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; clip: rect(3.186em 1000.003em 4.207em -999.997em); top: -4.682em; left: 31.515625px;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral; font-weight: bold;&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.243em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;⋅&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.243em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral; font-weight: bold;&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; clip: rect(3.186em 1000.003em 4.387em -999.997em); top: -3.36em; left: 31.515625px;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;∥&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral; font-weight: bold;&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;∥&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;∥&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral; font-weight: bold;&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;∥&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p style=&quot;padding: 0px; border: 0px; font-size: 15px; clear: both; color: rgb(34, 34, 34); font-family: Georgia, &#39;Times New Roman&#39;, Times, serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(254, 254, 254);&quot;&gt;Note the sign of this expression depends only on the angle&amp;#39;s cosine, therefore the dot product is&lt;/p&gt;
&lt;/div&gt;
&lt;ol style=&quot;padding: 0px; border: 0px; font-size: 15px; list-style: disc; color: rgb(34, 34, 34); font-family: Georgia, &#39;Times New Roman&#39;, Times, serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(254, 254, 254);&quot;&gt;
&lt;li style=&quot;padding: 0px; border: 0px; font-size: 15px; word-wrap: break-word;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; font-style: normal; font-weight: normal; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; clip: rect(1.745em 1000.003em 2.766em -999.997em); top: -2.58em; left: 0.003em;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.303em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; if the angle is &lt;strong style=&quot;padding: 0px; border: 0px; font-size: 15px; font-weight: bold;&quot;&gt;obtuse&lt;/strong&gt;,&lt;/li&gt;
&lt;li style=&quot;padding: 0px; border: 0px; font-size: 15px; word-wrap: break-word;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; font-style: normal; font-weight: normal; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; clip: rect(1.745em 1000.003em 2.766em -999.997em); top: -2.58em; left: 0.003em;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.303em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; if the angle is &lt;strong style=&quot;padding: 0px; border: 0px; font-size: 15px; font-weight: bold;&quot;&gt;acute&lt;/strong&gt;,&lt;/li&gt;
&lt;li style=&quot;padding: 0px; border: 0px; font-size: 15px; word-wrap: break-word;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; font-style: normal; font-weight: normal; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; clip: rect(1.745em 1000.003em 2.766em -999.997em); top: -2.58em; left: 0.003em;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;padding: 0px 0px 0px 0.303em; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Regular;&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; if the &lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; font-style: normal; font-weight: normal; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; clip: rect(1.985em 1000.003em 2.766em -999.997em); top: -2.58em; left: 0.003em;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Italic;&quot;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and &lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; font-style: normal; font-weight: normal; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 15px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; clip: rect(1.745em 1000.003em 2.766em -999.997em); top: -2.58em; left: 0.003em;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none;&quot;&gt;&lt;span style=&quot;padding: 0px; border: 0px; font-size: 16.6499996185303px; transition: none; vertical-align: 0px; text-decoration: none; font-family: STIXGeneral-Italic;&quot;&gt;b&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; are &lt;strong style=&quot;padding: 0px; border: 0px; font-size: 15px; font-weight: bold;&quot;&gt;orthogonal&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia, &#39;Times New Roman&#39;, Times, serif;&quot;&gt;&lt;span style=&quot;color: rgb(34, 34, 34);&quot;&gt;&lt;span style=&quot;text-transform:none;margin:0px;border:0px;font-size:100%;display:inline;font-style:normal;font-weight:normal;text-indent:0px;text-align:left;padding:0px;letter-spacing:normal;word-spacing:normal;word-wrap:normal;white-space:nowrap;float:none;direction:ltr;max-width:none;max-height:none;min-width:0px;min-height:0px;&quot;&gt;&lt;span style=&quot;min-width:0px;transition:none;padding:0px;margin:0px;max-width:none;max-height:none;border:0px;min-height:0px;vertical-align:0px;text-decoration:none;white-space:nowrap;&quot;&gt;&lt;span style=&quot;display:inline-block;margin:0px;border:0px;font-size:100%;transition:none;padding:0px;position:static;vertical-align:0px;text-decoration:none;width:8.171em;&quot;&gt;&lt;span style=&quot;position:relative;margin:0px;border:0px;font-size:111%;transition:none;display:inline-block;padding:0px;vertical-align:0px;text-decoration:none;width:7.33em;height:0px;&quot;&gt;&lt;span style=&quot;position:absolute;margin:0px;border:0px;font-size:100%;transition:none;display:inline;padding:0px;vertical-align:0px;text-decoration:none;clip:rect(1.024em 1000.003em 3.667em -999.997em);top:-2.58em;left:0.003em;&quot;&gt;&lt;span style=&quot;font-size:100%;transition:none;margin:0px;padding:0px;border:0px;display:inline;position:static;vertical-align:0px;text-decoration:none;&quot;&gt;&lt;span style=&quot;display:inline;margin:0px;border:0px;font-size:100%;transition:none;padding:0px;position:static;vertical-align:0px;text-decoration:none;padding-left:0.303em;&quot;&gt;&lt;span style=&quot;vertical-align:0px;margin:0px;border:0px;font-size:100%;transition:none;display:inline-block;position:relative;padding:0px;text-decoration:none;width:3.787em;height:0px;margin-right:0.123em;margin-left:0.123em;&quot;&gt;&lt;span style=&quot;vertical-align:0px;margin:0px;border:0px;font-size:100%;transition:none;display:inline;position:absolute;padding:0px;text-decoration:none;clip:rect(3.186em 1000.003em 4.387em -999.997em);top:-3.36em;left:50%;margin-left:-1.859em;&quot;&gt;&lt;span style=&quot;font-size:100%;transition:none;margin:0px;padding:0px;border:0px;display:inline;position:static;vertical-align:0px;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size:100%;transition:none;margin:0px;padding:0px;border:0px;display:inline;position:static;vertical-align:0px;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size:100%;transition:none;margin:0px;padding:0px;border:0px;display:inline;position:static;vertical-align:0px;text-decoration:none;&quot;&gt;&lt;span style=&quot;position:static;margin:0px;border:0px;font-size:100%;transition:none;display:inline;padding:0px;vertical-align:0px;text-decoration:none;font-family:STIXGeneral;font-weight:bold;&quot;&gt;A&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display:inline;margin:0px;border:0px;font-size:100%;transition:none;padding:0px;position:static;vertical-align:0px;text-decoration:none;font-family:STIXGeneral-Regular;&quot;&gt;∥&lt;/span&gt;&lt;span style=&quot;display:inline;margin:0px;border:0px;font-size:100%;transition:none;padding:0px;position:static;vertical-align:0px;text-decoration:none;font-family:STIXGeneral-Regular;&quot;&gt;∥&lt;/span&gt;&lt;span style=&quot;font-size:100%;transition:none;margin:0px;padding:0px;border:0px;display:inline;position:static;vertical-align:0px;text-decoration:none;&quot;&gt;&lt;span style=&quot;font-size:100%;transition:none;margin:0px;padding:0px;border:0px;display:inline;position:static;vertical-align:0px;text-decoration:none;&quot;&gt;&lt;span style=&quot;position:static;margin:0px;border:0px;font-size:100%;transition:none;display:inline;padding:0px;vertical-align:0px;text-decoration:none;font-family:STIXGeneral;font-weight:bold;&quot;&gt;B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;display:inline;margin:0px;border:0px;font-size:100%;transition:none;padding:0px;position:static;vertical-align:0px;text-decoration:none;font-family:STIXGeneral-Regular;&quot;&gt;∥&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;Cross product of a vector is an orthogonal vector. &lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://betterexplained.com/articles/vector-calculus-understanding-the-dot-product/&quot;&gt;http://betterexplained.com/articles/vector-calculus-understanding-the-dot-product/&lt;/a&gt;&lt;/div&gt;
&lt;/en-note&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Aug 2015 00:00:00 -0400</pubDate>
        <link>http://udaytv.github.io/Dot.Cross.product.of.vectors/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Dot.Cross.product.of.vectors/</guid>
      </item>
    
      <item>
        <title>Install RabbitMQ on Ubuntu LTS</title>
        <description>&lt;p&gt;I was looking for a reliable and fast open source MQ for my personnel cloud. Here is upto date documentation for installing RabbitMQ on &lt;a href=&quot;https://www.rabbitmq.com/install-debian.html&quot;&gt;Ubuntu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/rabbitmq-screen.png&quot; alt=&quot;_config.yml&quot;&gt;&lt;/p&gt;

&lt;p&gt;RabbitMQ is included in Debain and Ubuntu but is v3.2 while the latest available is v3.5. You need to update APT repositoty. Make sure you get &amp;#39;stable&amp;#39; branch.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;echo &amp;quot;deb http://www.rabbitmq.com/debian/ stable main&amp;quot;  | sudo tee  /etc/apt/sources.list.d/rabbitmq.list &amp;gt; /dev/null
sudo wget http://www.rabbitmq.com/rabbitmq-signing-key-public.asc
sudo apt-key add rabbitmq-signing-key-public.asc
sudo apt-get update
sudo apt-get install rabbitmq-server -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If there is an erlang already installed you might have to remove it manually &lt;code&gt;sudo apt-get remove erlang-nox&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next you can check users, new &amp;#39;rabbitmq&amp;#39; user would be added. Also if you do service &lt;code&gt;--status-all&lt;/code&gt;, you should see &lt;code&gt;rabbitmq-server&lt;/code&gt; service.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo service rabbitmq-server start | stop | restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can install management console on port 15672, default user is guest and passord is guest.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo rabbitmq-plugins enable rabbitmq_management
sudo rabbitmq-plugins enable rabbitmq_stomp
sudo service rabbitmq-server restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can monitor usage on command line using &lt;code&gt;rabbitmqctl status&lt;/code&gt;. You can use web console if you do not like rabbitmqctl CLI. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo rabbitmqctl stop | restart | status
sudo rabbitmqctl add_user user_name password_for_this_user
sudo rabbitmqctl set_user_tags user_name administrator
sudo rabbitmqctl set_permissions -p / user_name &amp;quot;.*&amp;quot; &amp;quot;.*&amp;quot; &amp;quot;.*&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Delete guest user &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo rabbitmqctl delete_user guest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Read ...&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.rabbitmq.com/install-debian.html&quot;&gt;Install RabbitMQ on Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://java.dzone.com/category/tags/rabbitmq&quot;&gt;RabbitMQ on DZone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rabbitmq&quot;&gt;RabbitMQ samples on github&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 03 Mar 2015 00:00:00 -0500</pubDate>
        <link>http://udaytv.github.io/Install-RabbitMQ/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Install-RabbitMQ/</guid>
      </item>
    
      <item>
        <title>Using spring boot for REST service using JPA</title>
        <description>&lt;p&gt;With &lt;a href=&quot;http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/&quot;&gt;spring-boot&lt;/a&gt; it is incredibly easy to create a JavaEE project using embedded container. Unlike Spring-ROO it is very easy to migrate to production environment. Without any boiler plate code you can be sure of not using deprecated spring api&amp;#39;s from wild. &lt;/p&gt;

&lt;p&gt;You can view complete source code on &lt;a href=&quot;https://github.com/dhval/spring-boot-rest&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;h5&gt;How to run this sample.&lt;/h5&gt;

&lt;p&gt;1.&lt;strong&gt;Using IDE.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is web (war) &lt;code&gt;mvn package&lt;/code&gt; package that can easily be deployed using your favorite Java IDE with a web container.&lt;/p&gt;

&lt;p&gt;You would need to create a JNDI Datasource, /var/lib/tomcat7/conf/context.xml. The JPA-Hibernate would take care of generating tables and sql-ddl. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;Resource auth=&amp;quot;Container&amp;quot; driverClassName=&amp;quot;com.mysql.jdbc.Driver&amp;quot; maxActive=&amp;quot;10&amp;quot; maxIdle=&amp;quot;5&amp;quot; maxWait=&amp;quot;1000&amp;quot; name=&amp;quot;jdbc/earth&amp;quot; type=&amp;quot;javax.sql.DataSource&amp;quot; maxAge=&amp;quot;180000&amp;quot; testOnBorrow=&amp;quot;true&amp;quot; testWhileIdle=&amp;quot;true&amp;quot; validationInterval=&amp;quot;0&amp;quot; url=&amp;quot;jdbc:mysql://localhost:3306/motherearth?autoReconnect=true&amp;quot; username=&amp;quot;user&amp;quot; password=&amp;quot;password&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.&lt;strong&gt;Command Line&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To run using spring boot, &lt;code&gt;mvn spring-boot:run&lt;/code&gt;. Embedded server do not have any JNDI by default, you can create it &lt;a href=&quot;http://stackoverflow.com/questions/24941829/how-to-create-jndi-context-in-spring-boot-with-embedded-tomcat-container&quot;&gt;programmatically&lt;/a&gt; or just use plain datasource as follows. &lt;/p&gt;

&lt;p&gt;Update pom.xml packaging to jar.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instead of using JNDI-Datasource &lt;code&gt;spring.datasource.jndi-name&lt;/code&gt;, define your connection parameters in application.properties file. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://${mysql.host}:${mysql.port}/${mysql.database-name}?autoReconnect=true
spring.datasource.username=${mysql.user}
spring.datasource.password=${mysql.pass}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Mon, 27 Oct 2014 00:00:00 -0400</pubDate>
        <link>http://udaytv.github.io/Spring-Boot-REST/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Spring-Boot-REST/</guid>
      </item>
    
      <item>
        <title>From Java web jar to bower registry</title>
        <description>&lt;p&gt;Java web jars provide static resources for web projects, it supports very good integration with maven (or gradle) by creating overlays that can be unzipped and used inside war. Maven war plugin makes this drop-dead simple.&lt;/p&gt;

&lt;p&gt;By using &lt;a href=&quot;http://bower.io/&quot;&gt;bower&lt;/a&gt; you can manage all your web resources much easier, it is significantly easier to update dependecies to newer versions. It start to make more sense if you use node-grunt tooling instead of hacking your way around maven with bunch of odd custom shell scripts. &lt;/p&gt;

&lt;p&gt;Once you start using bower then it is time to eat your own dog food. Bower facilitates you to publish your web resources (internally or externally) to a git server, all you have to do is &amp;#39;git tag&amp;#39; and push your files. Bower look at tarballs associted with tags to infer version.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;quot;dependencies&amp;quot;: {
    &amp;quot;json3&amp;quot;: &amp;quot;^3.3.0&amp;quot;,
        ....
    &amp;quot;common&amp;quot;: &amp;quot;git://github.com/user/base-web.git&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can reference dependency from another git project like below, notice .git/ at end.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;quot;dependencies&amp;quot;: {
    &amp;quot;json3&amp;quot;: &amp;quot;^3.3.0&amp;quot;,
        ....
    &amp;quot;common&amp;quot;: &amp;quot;/Users/dhval/java/git-repository/jnet/base-web/.git/&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is a sample flow of publishing a existing github project as npm registry.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git tag &amp;quot;v0.0.0&amp;quot;
git push origin --tags

bower register common git://github.com/user/base-web.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To automate above steps you can use &lt;a href=&quot;https://github.com/vojtajina/grunt-bump&quot;&gt;grunt-bump&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;grunt.initConfig({
bump: {
    options: {
        files: [
            &amp;quot;package.json&amp;quot;,
            &amp;quot;bower.json&amp;quot;
        ],
        push: &amp;quot;true&amp;quot;,
        pushTo: &amp;#39;origin&amp;#39;
    }
}
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Time to tell &lt;a href=&quot;http://maven.apache.org/plugins/maven-war-plugin/index.html&quot;&gt;maven-war-plugin&lt;/a&gt; to copy all resources from Project_Root/dist into exploded-war directory. So that all maven based IDE like IntelliJ can create war naturally. Note web resources are different from regular resources like xml, properties, schema beans etc. You use &lt;a href=&quot;https://maven.apache.org/plugins/maven-resources-plugin/index.html&quot;&gt;maven-resources-plugin&lt;/a&gt; and &lt;code&gt;mvn resources:copy-resources&lt;/code&gt; for them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before&lt;/strong&gt; &lt;code&gt;mvn war:exploded&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Root
|---dist
    |---common &amp;lt;!-- Bower created internal resources here--&amp;gt;
    |---....
    |---json3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;After&lt;/strong&gt; I need my internal dependencies in web/{ js| css} and external dependencies in web/dist/dependency-name/ with their licenses.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;target
|---&amp;lt;app-name&amp;gt;
    |
    |----dist/json3
    |----js/common
    |----css/common
    |----css/img
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We need to add &lt;code&gt;webReources&lt;/code&gt; element in our war-plugin config.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;build&amp;gt;
&amp;lt;plugins&amp;gt;   
&amp;lt;plugin&amp;gt;
&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;maven-war-plugin&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;2.3&amp;lt;/version&amp;gt;
&amp;lt;configuration&amp;gt;
    &amp;lt;archive&amp;gt;
        &amp;lt;manifest&amp;gt;
            &amp;lt;classpathPrefix&amp;gt;WEB-INF/lib/&amp;lt;/classpathPrefix&amp;gt;
            &amp;lt;addClasspath&amp;gt;true&amp;lt;/addClasspath&amp;gt;
        &amp;lt;/manifest&amp;gt;
    &amp;lt;/archive&amp;gt;
    &amp;lt;!-- Filter, replace properties with values. --&amp;gt;
    &amp;lt;filters&amp;gt;
        &amp;lt;filter&amp;gt;src/main/resources/application.properties&amp;lt;/filter&amp;gt;
    &amp;lt;/filters&amp;gt;
    &amp;lt;nonFilteredFileExtensions&amp;gt;
        &amp;lt;!-- default value contains jpg,jpeg,gif,bmp,png --&amp;gt;
        &amp;lt;nonFilteredFileExtension&amp;gt;pdf&amp;lt;/nonFilteredFileExtension&amp;gt;
    &amp;lt;/nonFilteredFileExtensions&amp;gt;
    &amp;lt;!-- Copy resources to different directories. --&amp;gt;
    &amp;lt;webResources&amp;gt;
        &amp;lt;resource&amp;gt;
            &amp;lt;excludes&amp;gt;
                &amp;lt;exclude&amp;gt;**/common/**&amp;lt;/exclude&amp;gt;
            &amp;lt;/excludes&amp;gt;
            &amp;lt;directory&amp;gt;dist&amp;lt;/directory&amp;gt;
            &amp;lt;targetPath&amp;gt;dist&amp;lt;/targetPath&amp;gt;
            &amp;lt;!-- it&amp;#39;s not a good idea to filter binary files --&amp;gt;
            &amp;lt;filtering&amp;gt;false&amp;lt;/filtering&amp;gt;
        &amp;lt;/resource&amp;gt;
        &amp;lt;resource&amp;gt;
            &amp;lt;directory&amp;gt;dist/common/js&amp;lt;/directory&amp;gt;
            &amp;lt;targetPath&amp;gt;js/common&amp;lt;/targetPath&amp;gt;
            &amp;lt;filtering&amp;gt;false&amp;lt;/filtering&amp;gt;
        &amp;lt;/resource&amp;gt;
        &amp;lt;resource&amp;gt;
            &amp;lt;directory&amp;gt;dist/common/css&amp;lt;/directory&amp;gt;
            &amp;lt;targetPath&amp;gt;css/common&amp;lt;/targetPath&amp;gt;
            &amp;lt;filtering&amp;gt;false&amp;lt;/filtering&amp;gt;
        &amp;lt;/resource&amp;gt;
        &amp;lt;resource&amp;gt;
            &amp;lt;directory&amp;gt;dist/common/img&amp;lt;/directory&amp;gt;
            &amp;lt;targetPath&amp;gt;css/img&amp;lt;/targetPath&amp;gt;
            &amp;lt;filtering&amp;gt;false&amp;lt;/filtering&amp;gt;
        &amp;lt;/resource&amp;gt;
    &amp;lt;/webResources&amp;gt;
&amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;
&amp;lt;/plugins&amp;gt;
&amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Sat, 02 Aug 2014 00:00:00 -0400</pubDate>
        <link>http://udaytv.github.io/Bower-Registry/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Bower-Registry/</guid>
      </item>
    
      <item>
        <title>Using spring property place holder</title>
        <description>&lt;p&gt;We all freqently, use spring property holder in our spring based applications. But there are few cavets that are worth revisiting.&lt;/p&gt;

&lt;p&gt;Old Way&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;context:property-placeholder location=&amp;quot;application.properties&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Spring 3.1&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;---spring.xml---

&amp;lt;bean class=&amp;quot;org.springframework.context.support.PropertySourcesPlaceholderConfigurer&amp;quot;&amp;gt;
  &amp;lt;property name=&amp;quot;locations&amp;quot;&amp;gt;
   &amp;lt;list&amp;gt;
    &amp;lt;value&amp;gt;classpath:application.properties&amp;lt;/value&amp;gt;
    &amp;lt;value&amp;gt;classpath:rabbitmq.properties&amp;lt;/value&amp;gt;
   &amp;lt;/list&amp;gt;
&amp;lt;/property&amp;gt;
  &amp;lt;property name=&amp;quot;ignoreUnresolvablePlaceholders&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;/bean&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The real goodness happens below. The @Autowired together with @Value let spring initilize component with w/o no argument constructor. Note &amp;#39;:&amp;#39; in @Value is used to specify default value.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;@Component
public class QueueConsumer extends EndPoint implements Runnable, Consumer {

    @Autowired
    public QueueConsumer( @Value(&amp;quot;${rabbit.host:192.168.0.112}&amp;quot;) String host,
                          @Value(&amp;quot;${rabbit.endpoint:queue}&amp;quot;) String endPointName) throws IOException{
        super(host, endPointName);
    }

...
}    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And lastly, obtaining properties via the new Environment APIs.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;@Autowired
private Environment env;

dataSource.setUrl(env.getProperty(&amp;quot;jdbc.url&amp;quot;));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://www.baeldung.com/2012/02/06/properties-with-spring/&quot;&gt;Read ...&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Mar 2014 00:00:00 -0500</pubDate>
        <link>http://udaytv.github.io/Spring-Property-PlaceHolder/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Spring-Property-PlaceHolder/</guid>
      </item>
    
      <item>
        <title>TCP-IP QA</title>
        <description>&lt;p&gt;&lt;en-note style=&quot;word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;&quot;&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;Common Terms - &lt;/div&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;OSI vs TCP-IP &amp;amp; layers&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;hub, switch &amp;amp; router&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;ARP vs DHCP&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;b&gt;&lt;br/&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;b&gt;What is &amp;quot;Segment&amp;quot;?&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;background-attachment: scroll; background-clip: border-box; background-image: none; background-origin: padding-box; border: 0px none rgb(0, 0, 0); border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-collapse: separate; border-spacing: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; bottom: auto; box-shadow: none; caption-side: top; clear: none; clip: auto; content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; empty-cells: show; float: none; height: auto; left: auto; list-style: disc outside none; margin: 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; resize: none; right: auto; table-layout: auto; text-overflow: clip; text-shadow: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; width: auto; word-wrap: normal; z-index: auto; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; image-rendering: auto; lighting-color: #ffffff; marker-end: none; marker-mid: none; marker-start: none; mask: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%;&quot;&gt;
&lt;div style=&quot;clear: left;&quot;&gt;
&lt;div style=&quot;font-family: serif; font-size: 16px;&quot;&gt;
&lt;p&gt;&lt;span style=&quot;border-collapse: separate; font-family: Tahoma; border-spacing: 0px;&quot;&gt;&amp;quot;Segment&amp;quot; is a PDU (Protocol Data Unit) of Transport layer of OSI model. It is the data unit of transport layer.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255); font-size: 16px;&quot;&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;span style=&quot;border-collapse: separate; border-spacing: 0px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;What is the PDU of &amp;quot;Network layer&amp;quot; and &amp;quot;Data link layer&amp;quot;.&lt;/font&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;border-collapse: separate; border-spacing: 0px;&quot;&gt;PDU for &lt;i&gt;Network Layer aka IP&lt;/i&gt; is: &amp;quot;Packet&amp;quot; and PDU for &lt;i&gt;Data Link Layer aka Ethernet&lt;/i&gt; is :&amp;quot;Frame&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;PDU for TCP is segments and for UDP is datagram.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;*** TCP is a stream protocol and so do not see data as packets. IP layer beneath it combines the fragmented packets. &lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 23px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;border-collapse: separate; border-spacing: 0px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;You have one IP: 192.168.10.29. In which layer this IP works?&lt;/font&gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255); font-size: 16px;&quot;&gt;
&lt;div&gt;
&lt;p&gt;&lt;span style=&quot;border-collapse: separate; border-spacing: 0px;&quot;&gt;Network layer.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255); font-size: 16px;&quot;&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;span style=&quot;border-collapse: separate; border-spacing: 0px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;DNS uses which protocol? Why?&lt;/font&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255); font-size: 16px;&quot;&gt;
&lt;p&gt;&lt;span style=&quot;border-collapse: separate; border-spacing: 0px;&quot;&gt;DNS uses both TCP or UDP or both. UDP can handle only 512bytes. If data size is withing 512 bytes UDP is used, otherwise, TCP is used.&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255); font-size: 16px;&quot;&gt;&lt;span style=&quot;border-collapse: separate; border-spacing: 0px;&quot;&gt;&lt;b&gt;Which layer is closer to the user?&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div style=&quot;font-size: 16px;&quot;&gt;Layer 7 or Application layer is closer to the user.&lt;/div&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;Differentiate between forward lookup and reverse lookup in DNS?&lt;/font&gt;&lt;/h2&gt;
&lt;ul style=&quot;font-size: 16px;&quot;&gt;
&lt;li&gt;Forward lookup is: name-to-address,&lt;/li&gt;
&lt;li&gt;Reverse lookup is: address-to-name.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div style=&quot;font-size: 23px; font-weight: bold;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;What are the difference between TCP and UDP?&lt;/font&gt;&lt;/div&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;
&lt;ul style=&quot;font-size: 16px;&quot;&gt;
&lt;li&gt;TCP: Connection oriented protocol, acknowledged one, Point to point communication.&lt;/li&gt;
&lt;li&gt;UDP: Connection less protocol, unreliable, less traffic&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;What is IPSec?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;IPSec is &amp;quot;Internet Protocol Security&amp;quot;. It is a suite of protocols for securing Internet Protocol(IP) communications.&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;What is the difference between flow control and error control?&lt;/span&gt;&lt;/h2&gt;
&lt;ul style=&quot;font-size: 16px;&quot;&gt;
&lt;li&gt;&lt;u&gt;Flow control:&lt;/u&gt; adjust and confirm data flow rate for successful transmission.&lt;/li&gt;
&lt;li&gt;&lt;u&gt;Error Control:&lt;/u&gt; a way to recover corrupted data .&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;What is the responsibilities of Network Layer?&lt;/span&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;
&lt;ul style=&quot;font-size: 16px;&quot;&gt;
&lt;li&gt;Logical addressing&lt;/li&gt;
&lt;li&gt;Best effort delivery&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;Data link layer is sub-divide into how many groups?&lt;/font&gt;&lt;/h2&gt;
&lt;ul style=&quot;font-size: 16px;&quot;&gt;
&lt;li&gt;2 sub-divided groups: MAC Layer and LLC layer&lt;/li&gt;
&lt;li&gt;MAC: Media Access Control/Medium Access Control&lt;/li&gt;
&lt;li&gt;LLC: Logical Link Control&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;What is the port number of Telnet and DNS?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;Telnet = 23 and DNS = 53&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;What is the port number of ftp(data) and ftp?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;ftp(data) = 20 and ftp=21&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;ARP resolves what? MAC Address or IP?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;ARP stands for Address Resolution Protocol. It helps to find the hardware address or MAC address when IP address is known.&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;Which layer of OSI is responsible for end-to-end communication?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;Transport layer.&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;Why we have to use router?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;To communicate several networks, routers are used. Routers have both broadcast domain and collision domain.&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;RARP resolves what? Address or IP?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;RARP stands for Reverse Address Resolution Protocol. It helps to find the IP address when physical or hardware or MAC address is known.&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;What is OSI model?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;OSI model is a reference model containing 7 layers such as physical layer, data link layer, network layer, transport layer, session layer, presentation layer and application layer.&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;What is TCP/IP model?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;TCP/IP model is an implementation of OSI reference model. It has five layers. They are: Network layer, Internet layer, Transport layer and Application layer.&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;What is the full form of OSI and TCP/IP model?&lt;/font&gt;&lt;/h2&gt;
&lt;ul style=&quot;font-size: 16px;&quot;&gt;
&lt;li&gt;OSI stands for = Open Systems Interconnection (OSI) model&lt;/li&gt;
&lt;li&gt;TCP/IP stands for = Transmission Control Protocol/ Internet Protocol&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;What are the differences between OSI and TCP/IP model?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;Important differences are:&lt;/p&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;OSI is a reference model and TCP/IP is an implementation of OSI model.&lt;/p&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;OSI has 7 layers whereas TCP/IP has only 4 layers The upper 3 layers of the OSI model is combined on the TCP/IP model.&lt;/p&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;OSI has: physical layer, data link layer, network layer, transport layer, session layer, presentation layer and application layer TCP/IP has : Network layer, Internet layer, transport layer and application layer.&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;What are the differences among router, switch, bridge and hub?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;All of them are devices and are used in network. Their differences are:&lt;/p&gt;
&lt;ul style=&quot;font-size: 16px;&quot;&gt;
&lt;li&gt;Router: Layer 3 device, can work on physical, data and network layer.&lt;/li&gt;
&lt;li&gt;Switch: Layer 2 device, can work on data link layer&lt;/li&gt;
&lt;li&gt;Bridge: Layer 2 device, can work on data link layer.&lt;/li&gt;
&lt;li&gt;Hub: Layer 1device, just a multi-port repeater and works on physical layer&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;font-weight: bold;&quot;&gt;Switch operates on which layer of OSI model?&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;Normal switch operates at Layer 2 i.e. data link layer and Intelligent switch operates at Layer 3 i.e. network layer.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;&lt;b&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;Name 4 example of application layer?&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;
&lt;div style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;DNS, FTP, Telnet, http&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;How does ARP response the request?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;ARP sents the request in broadcast, response is unicast&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;Error control is down in which layer?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;Layer 4&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;Name the 2 sublayers of data link layer.&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;MAC sublayer and LLC sublayer&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;How is data send by IP layer?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;IP layer PDU is &amp;quot;packet&amp;quot;. So, data is send as packet.&lt;/p&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font size=&quot;3&quot; style=&quot;font-size: 16px;&quot;&gt;TCP/IP has how many layers?&lt;/font&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;5 layers: Network layer, Internet layer, Transport layer and Application layer.&lt;/p&gt;
&lt;h2&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;What are the differences of MAC sublayer and LLC sublayer?&lt;/span&gt;&lt;/h2&gt;
&lt;p style=&quot;font-size: 16px;&quot;&gt;In fact, Data Link layer has 2 sublayes: MAC sublayer &amp;amp; LLC sublayer.&lt;/p&gt;
&lt;ul&gt;
&lt;li style=&quot;font-size: 16px;&quot;&gt;MAC sublayer(802.3): defines how to transmit data on physical layer&lt;/li&gt;
&lt;li style=&quot;font-size: 16px;&quot;&gt;LLC sublayer(802.2): responsible for identifying different protocol logically &amp;amp; encapsulate them.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;h2 style=&quot;font-size: 23px;&quot;&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;Can I determine remote machines MAC Address&lt;/font&gt;&lt;/h2&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div style=&quot;font-size: 16px;&quot;&gt;No, You need access to execute command on remote machine like psexec. You can try using trace route to see the last gw host.   &lt;/div&gt;
&lt;div style=&quot;font-size: 16px;&quot;&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div style=&quot;font-size: 16px;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;Explain in detail the process of sending a piece of information from a host on subnet A to a host on subnet B.&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://arstechnica.com/civis/viewtopic.php?f=10&amp;amp;t=1162848&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;What I&amp;#39;m looking for:&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;Some knowledge of the OSI model&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;The concept of layers, layer units, and encapsulation.&lt;br/&gt;
The concept of MTU/fragmentation (not required, but nice if they know it)&lt;br/&gt;
The address resolution process at layer 3 (DNS)&lt;br/&gt;
The determination of local vs. non-local addresses (subnet masks/what are subnets/when to use a default gateway)&lt;br/&gt;
The address resolution process at layer 2 (ARP)&lt;br/&gt;
At least a vague understanding of layer 1 and associated issues&lt;br/&gt;
&lt;br/&gt;
&lt;b&gt;What is the difference between TCP and UDP? When would you use each of them?&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;font-size: 16px;&quot;&gt;
&lt;div&gt;What I&amp;#39;m looking for: someone who not only parrots the &amp;quot;connectionless vs. connection-oriented&amp;quot; idea, but can demonstrate they understand the reasons you might choose one or the other.&lt;br/&gt;
&lt;br/&gt;
&lt;b&gt;What is a traceroute, and how does it work?&lt;br/&gt;&lt;/b&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;What I&amp;#39;m looking for: understanding of ICMP, TTL, and routing hops. Bonus points if they also know UDP trace routing.&lt;br/&gt;
&lt;br/&gt;
&lt;b&gt;What is IPv6, and how does it differ from IPv4?&lt;/b&gt;&lt;br/&gt;
&lt;br/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;What I&amp;#39;m looking for: basic understanding of the IPv6 address structure, differences such as ARP v. ND, and any associated knowledge of current IPv6 &amp;#39;state of the internet&amp;#39;.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br/&gt;
&lt;b&gt;What is QoS? How does it work? Where would you apply it? When is it enforced?&lt;/b&gt;&lt;br/&gt;
&lt;br/&gt;
What I&amp;#39;m looking for: knowledge of traffic prioritization schemes, at least a vague understanding of classification levels at the header level, understanding of judicious application to time and latency sensitive protocols, and knowledge of contention vs. non-contention&lt;br/&gt;
&lt;br/&gt;
&lt;b&gt;What is an MX record? An A record? A PTR?&lt;/b&gt;&lt;/span&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;b&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;What is NAT? Where would you use it? How does it work? What are some limitations? &lt;/span&gt;&lt;/b&gt;&lt;/div&gt;
&lt;/en-note&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Oct 2012 00:00:00 -0400</pubDate>
        <link>http://udaytv.github.io/TCP.IP.QA/</link>
        <guid isPermaLink="true">http://udaytv.github.io/TCP.IP.QA/</guid>
      </item>
    
      <item>
        <title>Endianness - Byte Order Marker</title>
        <description>&lt;p&gt;&lt;en-note&gt;
&lt;div style=&quot;display: block; border-bottom-width: medium; border-bottom-style: none; margin: 0px; padding: 0px 0pt 0pt; position: relative; font-family: Verdana, sans-serif;&quot;&gt;
&lt;div style=&quot;background-repeat: initial initial;display:block;width:68.9%;&quot;&gt;
&lt;div style=&quot;border: 0pt none; font-style: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline; clear: both; text-decoration: none;&quot;&gt;
&lt;div&gt;
&lt;div style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border: 0px none rgb(0, 0, 0); border-collapse: separate; border-spacing: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style: disc outside none; margin: 13.3333px 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #ffffff; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;&lt;/div&gt;
&lt;ul style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1.625em 2.5em; outline: none 0pt; padding: 0pt; vertical-align: baseline; list-style: square outside none;&quot;&gt;
&lt;li style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;Big endian machine: Stores data &lt;strong style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: bold; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;big-end first&lt;/strong&gt;. When looking at multiple bytes, the first byte (lowest address) is the biggest.&lt;/li&gt;
&lt;li style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;Little endian machine: Stores data &lt;strong style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: bold; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;little-end first&lt;/strong&gt;. When looking at multiple bytes, the first byte is &lt;strong style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: bold; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;smallest&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border: 0px none rgb(0, 0, 0); border-collapse: separate; border-spacing: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style: disc outside none; margin: 13.3333px 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #ffffff; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;In one byte data encoding (ASCII) endianness do not matter. But when we use more than two bytes to represent a character we need to agree to store left to right or vice versa.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;Endianess is also referred to as the NUXI problem. Imagine the word UNIX stored in two 2-byte words. In a Big-Endian system, it would be stored as UNIX. In a little-endian system, it would be stored as NUXI.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;Big Endian is how we read in english left to right, hence high order byte is stored at 0 position.&lt;/span&gt;&lt;span style=&quot;font-family: Verdana, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt; Consider the 32-bit number, 0xDEADBEEF. &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;p style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border-bottom-color: rgb(0, 0, 0); border-bottom-style: none; border-bottom-width: 0px; border-collapse: separate; border-left-color: rgb(0, 0, 0); border-left-style: none; border-left-width: 0px; border-right-color: rgb(0, 0, 0); border-right-style: none; border-right-width: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; border-top-color: rgb(0, 0, 0); border-top-style: none; border-top-width: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; color: rgb(0, 0, 0); content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-size: 13.3333px; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style-image: none; list-style-position: outside; list-style-type: disc; margin-bottom: 13.3333px; margin-left: 0px; margin-right: 0px; margin-top: 13.3333px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline-color: rgb(0, 0, 0); outline-style: none; outline-width: 0px; outline-offset: 0px; overflow-x: visible; overflow-y: visible; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; background-size: ; border-bottom-left-radius: 0px 0px; border-bottom-right-radius: 0px 0px; border-top-left-radius: 0px 0px; border-top-right-radius: 0px 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #FFFFFF; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;&lt;en-media alt=&quot;Big-Endian&quot; hash=&quot;b0ff716482c1758c38e36168e4e386c4&quot; height=&quot;152&quot; style=&quot;cursor: default; vertical-align: middle; height: auto;&quot; type=&quot;image/gif&quot; width=&quot;381&quot;&gt;&lt;/en-media&gt;&lt;/p&gt;
&lt;div style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border: 0px none rgb(0, 0, 0); border-collapse: separate; border-spacing: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; color: rgb(0, 0, 0); content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style: disc outside none; margin: 13.3333px 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #ffffff; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;
&lt;div&gt;Big-Endian: The most significant byte is stored at the lowest byte address.&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border-bottom-color: rgb(0, 0, 0); border-bottom-style: none; border-bottom-width: 0px; border-collapse: separate; border-left-color: rgb(0, 0, 0); border-left-style: none; border-left-width: 0px; border-right-color: rgb(0, 0, 0); border-right-style: none; border-right-width: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; border-top-color: rgb(0, 0, 0); border-top-style: none; border-top-width: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; color: rgb(0, 0, 0); content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-size: 13.3333px; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style-image: none; list-style-position: outside; list-style-type: disc; margin-bottom: 13.3333px; margin-left: 0px; margin-right: 0px; margin-top: 13.3333px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline-color: rgb(0, 0, 0); outline-style: none; outline-width: 0px; outline-offset: 0px; overflow-x: visible; overflow-y: visible; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; background-size: ; border-bottom-left-radius: 0px 0px; border-bottom-right-radius: 0px 0px; border-top-left-radius: 0px 0px; border-top-right-radius: 0px 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #FFFFFF; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;&lt;en-media alt=&quot;Little-Endian&quot; hash=&quot;894690183e7c4e948860c143a6803ceb&quot; height=&quot;159&quot; style=&quot;cursor: default; vertical-align: middle; height: auto;&quot; type=&quot;image/gif&quot; width=&quot;380&quot;&gt;&lt;/en-media&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border: 0px none rgb(0, 0, 0); border-collapse: separate; border-spacing: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style: disc outside none; margin: 13.3333px 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #ffffff; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Little-endian: Least significant byte is stored at the lowest byte address.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Solution 1: Use a common format&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border: 0px none rgb(0, 0, 0); border-collapse: separate; border-spacing: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style: disc outside none; margin: 13.3333px 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #ffffff; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 1.625em 0pt 0pt; vertical-align: baseline; width: 68.9%;&quot;&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;It is important to use hton before sending data, even if you are big-endian. Your program may be so popular it is compiled on different machines, and you want your code to be portable (don&amp;#39;t you?).&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;Similarly, there is a function ntoh (network to host) used to read data off the network. You need this to make sure you are correctly interpreting the network data into the host&amp;#39;s format. You need to know the type of data you are receiving to decode it properly, and the conversion functions are:&lt;/p&gt;
&lt;pre style=&quot;background-image: none; border: 0pt none; font-family: &#39;Courier 10 Pitch&#39;, Courier, monospace; font-style: normal; font-weight: normal; margin: 0pt 0pt 1.625em; outline: none 0pt; padding: 0.75em 1.625em; vertical-align: baseline; background-attachment: scroll; background-color: rgb(34, 34, 34); font-variant: normal; overflow: auto; color: rgb(250, 250, 250); background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;
 htons()--&amp;quot;Host to Network Short&amp;quot;
 htonl()--&amp;quot;Host to Network Long&amp;quot;
 ntohs()--&amp;quot;Network to Host Short&amp;quot;
 ntohl()--&amp;quot;Network to Host Long&amp;quot;
&lt;/pre&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;Remember that a single byte is a single byte, and order does not matter.&lt;span style=&quot;font-size: 13px;&quot;&gt; Declared in &lt;i style=&quot;display:inline;font-style:italic;margin-bottom:0px;margin-top:0px;unicode-bidi:normal;&quot;&gt;winsock2.h&lt;/i&gt;, which are defined for TCP/IP, so all machines that support TCP/IP networking have them available. They store the data in &amp;#39;network byte order&amp;#39; which is big endian.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;table border=&quot;1&quot; style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border-bottom-color: rgb(0, 0, 0); border-bottom-style: outset; border-bottom-width: 1px; border-collapse: separate; border-left-color: rgb(0, 0, 0); border-left-style: outset; border-left-width: 1px; border-right-color: rgb(0, 0, 0); border-right-style: outset; border-right-width: 1px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px; border-top-color: rgb(0, 0, 0); border-top-style: outset; border-top-width: 1px; bottom: auto; caption-side: top; clear: none; clip: auto; color: rgb(0, 0, 0); content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: table; empty-cells: show; float: none; font-family: serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style-image: none; list-style-position: outside; list-style-type: disc; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline-color: rgb(0, 0, 0); outline-style: none; outline-width: 0px; outline-offset: 0px; overflow-x: visible; overflow-y: visible; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; background-size: ; border-bottom-left-radius: 0px 0px; border-bottom-right-radius: 0px 0px; border-top-left-radius: 0px 0px; border-top-right-radius: 0px 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #FFFFFF; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;
&lt;tbody style=&quot;border-bottom-style:none;border-bottom-width:0px;border-left-style:none;border-left-width:0px;border-right-style:none;border-right-width:0px;border-top-style:none;border-top-width:0px;display:table-row-group;vertical-align:middle;-moz-box-sizing:content-box;&quot;&gt;
&lt;tr style=&quot;display:table-row;font-family:Verdana,Arial,Sans-Serif;font-size:13.3333px;-moz-column-gap:13.3333px;&quot;&gt;
&lt;th style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;font-weight:700;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;text-align:center;&quot;&gt;Function&lt;/th&gt;
&lt;th style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;font-weight:700;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;text-align:center;&quot;&gt;Purpose&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;display:table-row;font-family:Verdana,Arial,Sans-Serif;font-size:13.3333px;-moz-column-gap:13.3333px;&quot;&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;&lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-bottom-style:none;border-bottom-width:0px;border-left-color:rgb(153, 0, 0);border-left-style:none;border-left-width:0px;border-right-color:rgb(153, 0, 0);border-right-style:none;border-right-width:0px;border-top-color:rgb(153, 0, 0);border-top-style:none;border-top-width:0px;color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;padding-bottom:0px;padding-left:0px;padding-right:0px;padding-top:0px;unicode-bidi:normal;vertical-align:baseline;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;ntohs&lt;/code&gt;&lt;/b&gt;&lt;/td&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;Convert a 16-bit quantity from network byte order to host byte order (Big-Endian to Little-Endian).&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;display:table-row;font-family:Verdana,Arial,Sans-Serif;font-size:13.3333px;-moz-column-gap:13.3333px;&quot;&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;&lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-bottom-style:none;border-bottom-width:0px;border-left-color:rgb(153, 0, 0);border-left-style:none;border-left-width:0px;border-right-color:rgb(153, 0, 0);border-right-style:none;border-right-width:0px;border-top-color:rgb(153, 0, 0);border-top-style:none;border-top-width:0px;color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;padding-bottom:0px;padding-left:0px;padding-right:0px;padding-top:0px;unicode-bidi:normal;vertical-align:baseline;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;ntohl&lt;/code&gt;&lt;/b&gt;&lt;/td&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;Convert a 32-bit quantity from network byte order to host byte order (Big-Endian to Little-Endian).&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;display:table-row;font-family:Verdana,Arial,Sans-Serif;font-size:13.3333px;-moz-column-gap:13.3333px;&quot;&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;&lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-bottom-style:none;border-bottom-width:0px;border-left-color:rgb(153, 0, 0);border-left-style:none;border-left-width:0px;border-right-color:rgb(153, 0, 0);border-right-style:none;border-right-width:0px;border-top-color:rgb(153, 0, 0);border-top-style:none;border-top-width:0px;color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;padding-bottom:0px;padding-left:0px;padding-right:0px;padding-top:0px;unicode-bidi:normal;vertical-align:baseline;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;htons&lt;/code&gt;&lt;/b&gt;&lt;/td&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;Convert a 16-bit quantity from host byte order to network byte order (Little-Endian to Big-Endian).&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;display:table-row;font-family:Verdana,Arial,Sans-Serif;font-size:13.3333px;-moz-column-gap:13.3333px;&quot;&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;&lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-bottom-style:none;border-bottom-width:0px;border-left-color:rgb(153, 0, 0);border-left-style:none;border-left-width:0px;border-right-color:rgb(153, 0, 0);border-right-style:none;border-right-width:0px;border-top-color:rgb(153, 0, 0);border-top-style:none;border-top-width:0px;color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;padding-bottom:0px;padding-left:0px;padding-right:0px;padding-top:0px;unicode-bidi:normal;vertical-align:baseline;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;htonl&lt;/code&gt;&lt;/b&gt;&lt;/td&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;Convert a 32-bit quantity from host byte order to network byte order (Little-Endian to Big-Endian).&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;i&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;I&lt;/span&gt;&lt;/i&gt;&lt;span style=&quot;font-family: Verdana, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;&lt;i&gt;f the processor on which the TCP/IP stack is to be run is itself also Big-Endian, each of the four macros (i.e. &lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-left-color:rgb(153, 0, 0);border-right-color:rgb(153, 0, 0);border-top-color:rgb(153, 0, 0);color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;margin-bottom:0px;margin-top:0px;unicode-bidi:normal;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;ntohs&lt;/code&gt;, &lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-left-color:rgb(153, 0, 0);border-right-color:rgb(153, 0, 0);border-top-color:rgb(153, 0, 0);color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;margin-bottom:0px;margin-top:0px;unicode-bidi:normal;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;ntohl&lt;/code&gt;, &lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-left-color:rgb(153, 0, 0);border-right-color:rgb(153, 0, 0);border-top-color:rgb(153, 0, 0);color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;margin-bottom:0px;margin-top:0px;unicode-bidi:normal;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;htons&lt;/code&gt;, &lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-left-color:rgb(153, 0, 0);border-right-color:rgb(153, 0, 0);border-top-color:rgb(153, 0, 0);color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;margin-bottom:0px;margin-top:0px;unicode-bidi:normal;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;htonl&lt;/code&gt;) will be defined to do nothing and there will be no run-time performance impact. If, however, the processor is Little-Endian, the macros will reorder the bytes appropriately. These macros are routinely called when building and parsing network packets and when socket connections are created. Serious run-time performance penalties occur when using TCP/IP on a Little-Endian processor. For that reason, it may be unwise to select a Little-Endian processor for use in a device, such as a router or gateway, with an abundance of network functionality. (Excerpt from reference &lt;a href=&quot;http://www.codeproject.com/KB/cpp/endianness.aspx#[1]&quot; style=&quot;border-bottom-color:rgb(0, 76, 213);border-left-color:rgb(0, 76, 213);border-right-color:rgb(0, 76, 213);border-top-color:rgb(0, 76, 213);color:rgb(0, 76, 213);cursor:pointer;-moz-column-rule-color:rgb(0, 76, 213);&quot;&gt;[1]&lt;/a&gt;).&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border: 0px none rgb(0, 0, 0); border-collapse: separate; border-spacing: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; color: rgb(0, 0, 0); content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style: disc outside none; margin: 13.3333px 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #ffffff; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;
&lt;div&gt;&lt;i&gt;One additional problem with the host-to-network APIs is that they are unable to manipulate 64-bit data elements.&lt;/i&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Solution 2: Use a Byte Order Mark (BOM)&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;The other approach is to include a magic number, such as 0xFEFF, before every piece of data. If you read the magic number and it is 0xFEFF, it means the data is in the same format as your machine, and all is well.&lt;/p&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;If you read the magic number and it is 0xFFFE (it is backwards), it means the data was written in a format different from your own. You&amp;#39;ll have to translate it.&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;&lt;span style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;BOM&lt;/span&gt; adds overhead to all data that is transmitted. Even if you are only sending 2 bytes of data, you need to include a 2-byte &lt;span style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;BOM.&lt;/span&gt; Ouch!&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;Unicode uses a &lt;span style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;BOM&lt;/span&gt; when storing multi-byte data (some Unicode character encodings can have 2, 3 or even 4-bytes per character). &lt;span style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;XML&lt;/span&gt; avoids this mess by storing data in &lt;span style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;UTF&lt;/span&gt;-8 by default, which stores Unicode information one byte at a time. &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Why are there endian issues at all? Can&amp;#39;t we just get along?&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;Each byte-order system has its advantages. Little-endian machines let you read the lowest-byte first, without reading the others. You can check whether a number is odd or even (last bit is 0) very easily, which is cool if you&amp;#39;re into that kind of thing. Big-endian systems store data in memory the same way we humans think about data (left-to-right), which makes low-level debugging easier.&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 100%;&quot;&gt;Resources -&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;background-repeat: initial initial;border-top-width:0pt;border-right-width:0pt;border-bottom-width:0pt;border-left-width:0pt;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;border-top-color:initial;border-right-color:initial;border-bottom-color:initial;border-left-color:initial;border-image:initial;font-family:inherit;font-size:100%;font-style:inherit;font-weight:inherit;margin-top:0pt;margin-right:0pt;margin-bottom:0pt;margin-left:0pt;outline-width:0pt;outline-style:none;outline-color:initial;padding-top:0pt;padding-right:0pt;padding-bottom:0pt;padding-left:0pt;vertical-align:baseline;&quot;&gt;
&lt;div style=&quot;background-repeat: initial initial;border-top-width:1px;border-right-width:0pt;border-bottom-width:0pt;border-left-width:0pt;border-top-style:solid;border-right-style:none;border-bottom-style:none;border-left-style:none;border-top-color:rgb(204, 204, 204);border-right-color:initial;border-bottom-color:initial;border-left-color:initial;border-image:initial;font-family:inherit;font-size:100%;font-style:inherit;font-weight:inherit;margin-top:20px;margin-right:0pt;margin-bottom:0pt;margin-left:0pt;outline-width:0pt;outline-style:none;outline-color:initial;padding-top:20px;padding-right:0pt;padding-bottom:0pt;padding-left:0pt;vertical-align:baseline;width:68.9%;&quot;&gt;
&lt;div style=&quot;background-repeat: initial initial;border-top-width:0pt;border-right-width:0pt;border-bottom-width:0pt;border-left-width:0pt;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;border-top-color:initial;border-right-color:initial;border-bottom-color:initial;border-left-color:initial;border-image:initial;font-family:inherit;font-size:100%;font-style:inherit;font-weight:inherit;margin-top:0pt;margin-right:0pt;margin-bottom:0pt;margin-left:0pt;outline-width:0pt;outline-style:none;outline-color:initial;padding-top:0pt;padding-right:0pt;padding-bottom:0pt;padding-left:0pt;vertical-align:baseline;&quot;&gt;
&lt;div&gt;&lt;a href=&quot;http://betterexplained.com/articles/understanding-big-and-little-endian-byte-order/&quot;&gt;http://betterexplained.com/articles/understanding-big-and-little-endian-byte-order/&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://www.codeproject.com/KB/cpp/endianness.aspx&quot;&gt;http://www.codeproject.com/KB/cpp/endianness.aspx&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://people.cs.umass.edu/~verts/cs32/endian.html&quot;&gt;http://people.cs.umass.edu/~verts/cs32/endian.html&lt;/a&gt;&lt;/div&gt;
&lt;br clear=&quot;none&quot;/&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/en-note&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Jun 2012 00:00:00 -0400</pubDate>
        <link>http://udaytv.github.io/Endianness.Byte.Order.Marker/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Endianness.Byte.Order.Marker/</guid>
      </item>
    
      <item>
        <title>Bucket and radix sorting</title>
        <description>&lt;p&gt;&lt;en-note style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border: 0px none rgb(0, 0, 0); border-collapse: separate; border-spacing: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; color: rgb(0, 0, 0); content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; float: none; font-family: serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 400; left: auto; letter-spacing: normal; line-height: 20px; list-style: disc outside none; margin: 8px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; quotes: “, ”, ‘, ’; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; background-size: auto; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; box-shadow: none; resize: none; word-wrap: break-word; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #ffffff; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;
&lt;div&gt;&lt;b&gt;Counting sort   &lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;We can implement a simple counting sort using array[k] when sorting 1…k numbers.&lt;/div&gt;
&lt;div&gt;When k is smaller than n. E.g. suppose &lt;b&gt;you want to sort 10000 people by birthday&lt;/b&gt;; n=10000, k=366, so time = O(n) and memory O(k).&lt;/div&gt;
&lt;div&gt;We need an ARRAY[k] to hold frequency of each number occurrence and then merge at end.&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;Radix sort   -  &lt;/b&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;span style=&quot;font-family: &#39;Open Sans&#39;, Helvetica, Arial, Verdana, sans-serif;&quot;&gt;&lt;a href=&quot;http://www.geeksforgeeks.org/how-to-efficiently-sort-a-big-list-dates-in-20s/&quot; style=&quot;padding: 0px; border: 0px; vertical-align: baseline; outline: none; color: rgb(236, 78, 32); text-decoration: none;&quot; title=&quot;How to efficiently sort a big list dates in 20’s&quot;&gt;How to efficiently sort a big list dates in 20’s&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;&lt;span style=&quot;font-family: &#39;Open Sans&#39;, Helvetica, Arial, Verdana, sans-serif;&quot;&gt;&lt;br/&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;What to do when k is large? Think about the decimal representation of a number. For any number we need &lt;u&gt;log(number) digits&lt;/u&gt;.&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;x = a + 10 b + 100 c + 1000 d + … where a,b,c etc all in range 0..9. These digits are easily small enough to do bucket sort.&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;    radix sort(L):&lt;/div&gt;
&lt;div&gt;    {&lt;br/&gt;
    bucket sort by a&lt;br/&gt;
    bucket sort by b&lt;br/&gt;
    bucket sort by c&lt;br/&gt;
    ...&lt;br/&gt;
    }&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;We do k passes where k is the number of digit.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Start from LSD so in last pass we handle the MSB and it is when all numbers settle in the final place.&lt;/b&gt; For MSB first we would need recursion similar to merge sort. By contrast to bucket sort, radix sorting never splits up the list; it just applies bucket sorting several times to the same list.&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;Sorting floating point numbers&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;Floating point represents numbers roughly in the form x = a * 2^b. If all numbers had same value of b, we could just bucket sort by a. Different b&amp;#39;s complicate the picture but basically b is more important than a so sort by a first (radix sort) then one more bucket sort by b.&lt;/div&gt;
&lt;/en-note&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Dec 2011 00:00:00 -0500</pubDate>
        <link>http://udaytv.github.io/Bucket.and.radix.sorting/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Bucket.and.radix.sorting/</guid>
      </item>
    
      <item>
        <title>Sorting</title>
        <description>&lt;p&gt;&lt;en-note bgcolor=&quot;#FFFFFF&quot; style=&quot;word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;&quot;&gt;
&lt;ul&gt;
&lt;li&gt;Using binary comparisons we have n! sub sets and hence we need n lg n to reach the leaf node of the binary tree. Integer sorting does not uses binary comparisons and can achieve O(n) for sorting n numbers. &lt;/li&gt;
&lt;li&gt;Find mid element&lt;font face=&quot;monospace&quot;&gt;:   int mid = first + (last - first) / 2;&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;Bubble Sort&lt;/b&gt; - &lt;span style=&quot;border-collapse: separate; orphans: 2; widows: 2; border-spacing: 0px;&quot;&gt;After every pass the biggest* element is sifted to end.  Lot of swaps since each element is compared with next element.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;Insertion Sort&lt;/b&gt; - Similar to human arranging cards. Elements are inserted into the sorted array [0 to k-1] and swap happens from inserted element to A[k]. We can use binary search to find position of kth element in [0 to k-1] sorted array. However actual insertion may cause k-1 swaps.&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;Selection Sort&lt;/b&gt; - Minimizes number of swaps. For every iteration k, find the smallest  element in A [k to k-1] and swap at the end of iteration.&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Quicksort&quot;&gt;&lt;b&gt;Quick Sort&lt;/b&gt;&lt;/a&gt; - Uses divide-and-conquer strategy, below are the recursion steps&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Choose a pivot value.&lt;/strong&gt; Pick a random element k or middle element as pivot value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Partition.&lt;/strong&gt; Rearrange elements in such a way, that all elements which are lesser than the pivot go to the left part of the array and vice-versa.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sort both parts.&lt;/strong&gt; Apply quicksort recursively to the left and the right parts.&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;&lt;b&gt;Stability - &lt;/b&gt;Any comparison based sorting algorithm can be made stable by modifying the comparisons to break ties according to the original positions of the objects, but few are automatically stable.&lt;/div&gt;
&lt;div&gt;&lt;b&gt;&lt;br/&gt;&lt;/b&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Bucket sort? Yes. We add items to the lists Y[i] in order, and concatenating them preserves that order.&lt;/li&gt;
&lt;li&gt;Heap sort? No. The act of placing objects into a heap (and heapifying them) destroys any initial ordering they might have.&lt;/li&gt;
&lt;li&gt;Merge sort? Maybe. It depends on how we divide lists into two, and on how we merge them. For instance if we divide by choosing every other element to go into each list, it is unlikely to be stable. If we divide by splitting a list at its midpoint, and break ties when merging in favor of the first list, then the algorithm can be stable.&lt;/li&gt;
&lt;li&gt;Quick sort? Again, maybe. It depends on how you do the partition step.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br/&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Sorting_algorithm&quot;&gt;https://en.wikipedia.org/wiki/Sorting_algorithm&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://www.sorting-algorithms.com/&quot;&gt;http://www.sorting-algorithms.com/&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://www.cs.ubc.ca/~harrison/Java/sorting-demo.html&quot;&gt;http://www.cs.ubc.ca/~harrison/Java/sorting-demo.html&lt;/a&gt;&lt;/div&gt;
&lt;/en-note&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Nov 2009 00:00:00 -0500</pubDate>
        <link>http://udaytv.github.io/Sorting/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Sorting/</guid>
      </item>
    
  </channel>
</rss>