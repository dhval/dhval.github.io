<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dhval Mudawal</title>
    <description>Rants</description>
    <link>http://udaytv.github.io</link>
    <atom:link href="http://udaytv.github.io/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Install RabbitMQ on Ubuntu LTS</title>
        <description>&lt;p&gt;I was looking for a reliable and fast open source MQ for my personnel cloud. Here is upto date documentation for installing RabbitMQ on &lt;a href=&quot;https://www.rabbitmq.com/install-debian.html&quot;&gt;Ubuntu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/rabbitmq-screen.png&quot; alt=&quot;_config.yml&quot;&gt;&lt;/p&gt;

&lt;p&gt;RabbitMQ is included in Debain and Ubuntu but is v3.2 while the latest available is v3.5. You need to update APT repositoty. Make sure you get &amp;#39;stable&amp;#39; branch.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;echo &amp;quot;deb http://www.rabbitmq.com/debian/ stable main&amp;quot;  | sudo tee  /etc/apt/sources.list.d/rabbitmq.list &amp;gt; /dev/null
sudo wget http://www.rabbitmq.com/rabbitmq-signing-key-public.asc
sudo apt-key add rabbitmq-signing-key-public.asc
sudo apt-get update
sudo apt-get install rabbitmq-server -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If there is an erlang already installed you might have to remove it manually &lt;code&gt;sudo apt-get remove erlang-nox&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next you can check users, new &amp;#39;rabbitmq&amp;#39; user would be added. Also if you do service &lt;code&gt;--status-all&lt;/code&gt;, you should see &lt;code&gt;rabbitmq-server&lt;/code&gt; service.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo service rabbitmq-server start | stop | restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can install management console on port 15672, default user is guest and passord is guest.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo rabbitmq-plugins enable rabbitmq_management
sudo rabbitmq-plugins enable rabbitmq_stomp
sudo service rabbitmq-server restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can monitor usage on command line using &lt;code&gt;rabbitmqctl status&lt;/code&gt;. You can use web console if you do not like rabbitmqctl CLI. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo rabbitmqctl stop | restart | status
sudo rabbitmqctl add_user user_name password_for_this_user
sudo rabbitmqctl set_user_tags user_name administrator
sudo rabbitmqctl set_permissions -p / user_name &amp;quot;.*&amp;quot; &amp;quot;.*&amp;quot; &amp;quot;.*&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Delete guest user &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sudo rabbitmqctl delete_user guest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Read ...&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.rabbitmq.com/install-debian.html&quot;&gt;Install RabbitMQ on Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://java.dzone.com/category/tags/rabbitmq&quot;&gt;RabbitMQ on DZone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rabbitmq&quot;&gt;RabbitMQ samples on github&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 03 Mar 2015 00:00:00 -0500</pubDate>
        <link>http://udaytv.github.io/Install-RabbitMQ/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Install-RabbitMQ/</guid>
      </item>
    
      <item>
        <title>Endiness &amp; Character Encoding</title>
        <description>&lt;p&gt;&lt;html&gt;&lt;head&gt;
  &lt;link rel=&quot;stylesheet&quot; href=&quot;/redesign/global/css/fonts.css&quot;&gt;
  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1&quot;&gt;
  &lt;meta name=&quot;robots&quot; content=&quot;nofollow&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;/redesign/global/css/noteView.css&quot;&gt;
  &lt;title&gt;Note content&lt;/title&gt;
&lt;style type=&quot;text/css&quot;&gt;&lt;/style&gt;&lt;/head&gt;
&lt;body id=&quot;note-frame-body&quot;&gt;
  &lt;div class=&quot;note-content&quot; style=&quot;height: 2719.875px;&quot;&gt;&lt;div class=&quot;ennote&quot;&gt;
&lt;div style=&quot;display: block; border-bottom-width: medium; border-bottom-style: none; margin: 0px; padding: 0px 0pt 0pt; position: relative; font-family: Verdana, sans-serif;&quot;&gt;
&lt;div style=&quot;background-repeat: initial initial;display:block;width:68.9%;&quot;&gt;
&lt;div style=&quot;border: 0pt none; font-style: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline; clear: both; text-decoration: none;&quot;&gt;
&lt;div&gt;
&lt;div style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border: 0px none rgb(0, 0, 0); border-collapse: separate; border-spacing: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style: disc outside none; margin: 13.3333px 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #ffffff; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;&lt;/div&gt;
&lt;ul style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1.625em 2.5em; outline: none 0pt; padding: 0pt; vertical-align: baseline; list-style: square outside none;&quot;&gt;
&lt;li style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;Big endian machine: Stores data &lt;strong style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: bold; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;big-end first&lt;/strong&gt;. When looking at multiple bytes, the first byte (lowest address) is the biggest.&lt;/li&gt;
&lt;li style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;Little endian machine: Stores data &lt;strong style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: bold; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;little-end first&lt;/strong&gt;. When looking at multiple bytes, the first byte is &lt;strong style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: bold; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;smallest&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border: 0px none rgb(0, 0, 0); border-collapse: separate; border-spacing: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style: disc outside none; margin: 13.3333px 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #ffffff; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;In one byte data encoding (ASCII)&amp;nbsp;endianness do not matter. But&amp;nbsp;when we use more than two bytes to represent a character we need to agree to store left to right or vice versa.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;Endianess is also referred to as the NUXI problem. Imagine the word UNIX stored in two 2-byte words. In a Big-Endian system, it would be stored as UNIX. In a little-endian system, it would be stored as NUXI.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;Big Endian is how we read in english left to right, hence high order byte is stored at 0 position.&lt;/span&gt;&lt;span style=&quot;font-family: Verdana, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp;Consider the 32-bit number, 0xDEADBEEF.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;p style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border-bottom-color: rgb(0, 0, 0); border-bottom-style: none; border-bottom-width: 0px; border-collapse: separate; border-left-color: rgb(0, 0, 0); border-left-style: none; border-left-width: 0px; border-right-color: rgb(0, 0, 0); border-right-style: none; border-right-width: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; border-top-color: rgb(0, 0, 0); border-top-style: none; border-top-width: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; color: rgb(0, 0, 0); content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-size: 13.3333px; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style-image: none; list-style-position: outside; list-style-type: disc; margin-bottom: 13.3333px; margin-left: 0px; margin-right: 0px; margin-top: 13.3333px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline-color: rgb(0, 0, 0); outline-style: none; outline-width: 0px; outline-offset: 0px; overflow-x: visible; overflow-y: visible; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; background-size: ; border-bottom-left-radius: 0px 0px; border-bottom-right-radius: 0px 0px; border-top-left-radius: 0px 0px; border-top-right-radius: 0px 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #FFFFFF; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;&lt;div class=&quot;image-and-hover&quot; style=&quot;display: inline-block; width: 381px; margin: 0px;&quot;&gt;&lt;img alt=&quot;Big-Endian&quot; height=&quot;152&quot; style=&quot;cursor: default; vertical-align: middle; height: auto; width: 100%; margin: 0px;&quot; width=&quot;381&quot; name=&quot;816cc92a-c80f-424b-8f81-6c14d8b707f1&quot; src=&quot;https://www.evernote.com/shard/s11/sh/fc27b983-1c3e-411f-b3d2-3fc8bd9df9ff/43b61d5be27f37eb52d7926e86d78481/res/816cc92a-c80f-424b-8f81-6c14d8b707f1/bigendian.gif?resizeSmall&amp;amp;width=832&quot; class=&quot;en-media&quot;&gt;&lt;div class=&quot;image-hover-container&quot;&gt;&lt;a class=&quot;hover-download&quot; title=&quot;Download&quot; href=&quot;#&quot;&gt;&lt;/a&gt;&lt;a class=&quot;hover-gallery&quot; title=&quot;Image Gallery&quot; href=&quot;#&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;
&lt;div style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border: 0px none rgb(0, 0, 0); border-collapse: separate; border-spacing: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; color: rgb(0, 0, 0); content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style: disc outside none; margin: 13.3333px 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #ffffff; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;
&lt;div&gt;Big-Endian: The most significant byte is stored at the lowest byte address.&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border-bottom-color: rgb(0, 0, 0); border-bottom-style: none; border-bottom-width: 0px; border-collapse: separate; border-left-color: rgb(0, 0, 0); border-left-style: none; border-left-width: 0px; border-right-color: rgb(0, 0, 0); border-right-style: none; border-right-width: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; border-top-color: rgb(0, 0, 0); border-top-style: none; border-top-width: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; color: rgb(0, 0, 0); content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-size: 13.3333px; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style-image: none; list-style-position: outside; list-style-type: disc; margin-bottom: 13.3333px; margin-left: 0px; margin-right: 0px; margin-top: 13.3333px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline-color: rgb(0, 0, 0); outline-style: none; outline-width: 0px; outline-offset: 0px; overflow-x: visible; overflow-y: visible; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; background-size: ; border-bottom-left-radius: 0px 0px; border-bottom-right-radius: 0px 0px; border-top-left-radius: 0px 0px; border-top-right-radius: 0px 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #FFFFFF; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;&lt;div class=&quot;image-and-hover&quot; style=&quot;display: inline-block; width: 380px; margin: 0px;&quot;&gt;&lt;img alt=&quot;Little-Endian&quot; height=&quot;159&quot; style=&quot;cursor: default; vertical-align: middle; height: auto; width: 100%; margin: 0px;&quot; width=&quot;380&quot; name=&quot;9f2adfb3-081d-4e9c-8079-3c5fedcb9a49&quot; src=&quot;https://www.evernote.com/shard/s11/sh/fc27b983-1c3e-411f-b3d2-3fc8bd9df9ff/43b61d5be27f37eb52d7926e86d78481/res/9f2adfb3-081d-4e9c-8079-3c5fedcb9a49/littleendian.gif?resizeSmall&amp;amp;width=832&quot; class=&quot;en-media&quot;&gt;&lt;div class=&quot;image-hover-container&quot;&gt;&lt;a class=&quot;hover-download&quot; title=&quot;Download&quot; href=&quot;#&quot;&gt;&lt;/a&gt;&lt;a class=&quot;hover-gallery&quot; title=&quot;Image Gallery&quot; href=&quot;#&quot;&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border: 0px none rgb(0, 0, 0); border-collapse: separate; border-spacing: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style: disc outside none; margin: 13.3333px 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #ffffff; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Little-endian: Least significant byte is stored at the lowest byte address.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Solution 1: Use a common format&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border: 0px none rgb(0, 0, 0); border-collapse: separate; border-spacing: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style: disc outside none; margin: 13.3333px 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #ffffff; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 1.625em 0pt 0pt; vertical-align: baseline; width: 68.9%;&quot;&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;It is important to use hton before sending data, even if you are big-endian. Your program may be so popular it is compiled on different machines, and you want your code to be portable (don&amp;#39;t you?).&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;Similarly, there is a function ntoh (network to host) used to read data off the network. You need this to make sure you are correctly interpreting the network data into the host&amp;#39;s format. You need to know the type of data you are receiving to decode it properly, and the conversion functions are:&lt;/p&gt;
&lt;pre style=&quot;background-image: none; border: 0pt none; font-family: &#39;Courier 10 Pitch&#39;, Courier, monospace; font-style: normal; font-weight: normal; margin: 0pt 0pt 1.625em; outline: none 0pt; padding: 0.75em 1.625em; vertical-align: baseline; background-attachment: scroll; background-color: rgb(34, 34, 34); font-variant: normal; overflow: auto; color: rgb(250, 250, 250); background-position: 0% 0%; background-repeat: repeat repeat;&quot; xml:space=&quot;preserve&quot;&gt; htons()--&amp;quot;Host to Network Short&amp;quot;
 htonl()--&amp;quot;Host to Network Long&amp;quot;
 ntohs()--&amp;quot;Network to Host Short&amp;quot;
 ntohl()--&amp;quot;Network to Host Long&amp;quot;
&lt;/pre&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;Remember that a single byte is a single byte, and order does not matter.&lt;span style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp;Declared in &lt;i style=&quot;display:inline;font-style:italic;margin-bottom:0px;margin-top:0px;unicode-bidi:normal;&quot;&gt;winsock2.h&lt;/i&gt;, which are defined for TCP/IP, so all machines that support TCP/IP networking have them available. They store the data in &amp;#39;network byte order&amp;#39; which is big endian.&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div&gt;
&lt;div&gt;
&lt;table border=&quot;1&quot; style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border-bottom-color: rgb(0, 0, 0); border-bottom-style: outset; border-bottom-width: 1px; border-collapse: separate; border-left-color: rgb(0, 0, 0); border-left-style: outset; border-left-width: 1px; border-right-color: rgb(0, 0, 0); border-right-style: outset; border-right-width: 1px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px; border-top-color: rgb(0, 0, 0); border-top-style: outset; border-top-width: 1px; bottom: auto; caption-side: top; clear: none; clip: auto; color: rgb(0, 0, 0); content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: table; empty-cells: show; float: none; font-family: serif; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style-image: none; list-style-position: outside; list-style-type: disc; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline-color: rgb(0, 0, 0); outline-style: none; outline-width: 0px; outline-offset: 0px; overflow-x: visible; overflow-y: visible; padding-bottom: 0px; padding-left: 0px; padding-right: 0px; padding-top: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; background-size: ; border-bottom-left-radius: 0px 0px; border-bottom-right-radius: 0px 0px; border-top-left-radius: 0px 0px; border-top-right-radius: 0px 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #FFFFFF; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;
&lt;tbody style=&quot;border-bottom-style:none;border-bottom-width:0px;border-left-style:none;border-left-width:0px;border-right-style:none;border-right-width:0px;border-top-style:none;border-top-width:0px;display:table-row-group;vertical-align:middle;-moz-box-sizing:content-box;&quot;&gt;
&lt;tr style=&quot;display:table-row;font-family:Verdana,Arial,Sans-Serif;font-size:13.3333px;-moz-column-gap:13.3333px;&quot;&gt;
&lt;th style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;font-weight:700;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;text-align:center;&quot;&gt;Function&lt;/th&gt;
&lt;th style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;font-weight:700;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;text-align:center;&quot;&gt;Purpose&lt;/th&gt;
&lt;/tr&gt;
&lt;tr style=&quot;display:table-row;font-family:Verdana,Arial,Sans-Serif;font-size:13.3333px;-moz-column-gap:13.3333px;&quot;&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;&lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-bottom-style:none;border-bottom-width:0px;border-left-color:rgb(153, 0, 0);border-left-style:none;border-left-width:0px;border-right-color:rgb(153, 0, 0);border-right-style:none;border-right-width:0px;border-top-color:rgb(153, 0, 0);border-top-style:none;border-top-width:0px;color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;padding-bottom:0px;padding-left:0px;padding-right:0px;padding-top:0px;unicode-bidi:normal;vertical-align:baseline;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;ntohs&lt;/code&gt;&lt;/b&gt;&lt;/td&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;Convert a 16-bit quantity from network byte order to host byte order (Big-Endian to Little-Endian).&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;display:table-row;font-family:Verdana,Arial,Sans-Serif;font-size:13.3333px;-moz-column-gap:13.3333px;&quot;&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;&lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-bottom-style:none;border-bottom-width:0px;border-left-color:rgb(153, 0, 0);border-left-style:none;border-left-width:0px;border-right-color:rgb(153, 0, 0);border-right-style:none;border-right-width:0px;border-top-color:rgb(153, 0, 0);border-top-style:none;border-top-width:0px;color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;padding-bottom:0px;padding-left:0px;padding-right:0px;padding-top:0px;unicode-bidi:normal;vertical-align:baseline;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;ntohl&lt;/code&gt;&lt;/b&gt;&lt;/td&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;Convert a 32-bit quantity from network byte order to host byte order (Big-Endian to Little-Endian).&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;display:table-row;font-family:Verdana,Arial,Sans-Serif;font-size:13.3333px;-moz-column-gap:13.3333px;&quot;&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;&lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-bottom-style:none;border-bottom-width:0px;border-left-color:rgb(153, 0, 0);border-left-style:none;border-left-width:0px;border-right-color:rgb(153, 0, 0);border-right-style:none;border-right-width:0px;border-top-color:rgb(153, 0, 0);border-top-style:none;border-top-width:0px;color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;padding-bottom:0px;padding-left:0px;padding-right:0px;padding-top:0px;unicode-bidi:normal;vertical-align:baseline;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;htons&lt;/code&gt;&lt;/b&gt;&lt;/td&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;Convert a 16-bit quantity from host byte order to network byte order (Little-Endian to Big-Endian).&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr style=&quot;display:table-row;font-family:Verdana,Arial,Sans-Serif;font-size:13.3333px;-moz-column-gap:13.3333px;&quot;&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;&lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-bottom-style:none;border-bottom-width:0px;border-left-color:rgb(153, 0, 0);border-left-style:none;border-left-width:0px;border-right-color:rgb(153, 0, 0);border-right-style:none;border-right-width:0px;border-top-color:rgb(153, 0, 0);border-top-style:none;border-top-width:0px;color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;padding-bottom:0px;padding-left:0px;padding-right:0px;padding-top:0px;unicode-bidi:normal;vertical-align:baseline;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;htonl&lt;/code&gt;&lt;/b&gt;&lt;/td&gt;
&lt;td style=&quot;border-bottom-style:inset;border-bottom-width:1px;border-left-style:inset;border-left-width:1px;border-right-style:inset;border-right-width:1px;border-top-style:inset;border-top-width:1px;display:table-cell;padding-bottom:1px;padding-left:1px;padding-right:1px;padding-top:1px;&quot;&gt;&lt;b&gt;Convert a 32-bit quantity from host byte order to network byte order (Little-Endian to Big-Endian).&lt;/b&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;b&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;
&lt;div&gt;&lt;i&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;I&lt;/span&gt;&lt;/i&gt;&lt;span style=&quot;font-family: Verdana, Arial, sans-serif;&quot;&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;&lt;i&gt;f the processor on which the TCP/IP stack is to be run is itself also Big-Endian, each of the four macros (i.e. &lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-left-color:rgb(153, 0, 0);border-right-color:rgb(153, 0, 0);border-top-color:rgb(153, 0, 0);color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;margin-bottom:0px;margin-top:0px;unicode-bidi:normal;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;ntohs&lt;/code&gt;, &lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-left-color:rgb(153, 0, 0);border-right-color:rgb(153, 0, 0);border-top-color:rgb(153, 0, 0);color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;margin-bottom:0px;margin-top:0px;unicode-bidi:normal;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;ntohl&lt;/code&gt;, &lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-left-color:rgb(153, 0, 0);border-right-color:rgb(153, 0, 0);border-top-color:rgb(153, 0, 0);color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;margin-bottom:0px;margin-top:0px;unicode-bidi:normal;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;htons&lt;/code&gt;, &lt;code style=&quot;border-bottom-color:rgb(153, 0, 0);border-left-color:rgb(153, 0, 0);border-right-color:rgb(153, 0, 0);border-top-color:rgb(153, 0, 0);color:rgb(153, 0, 0);display:inline;font-family:&#39;Courier New&#39;,Courier,mono;font-size:14.6667px;margin-bottom:0px;margin-top:0px;unicode-bidi:normal;-moz-column-gap:14.6667px;-moz-column-rule-color:rgb(153, 0, 0);&quot;&gt;htonl&lt;/code&gt;) will be defined to do nothing and there will be no run-time performance impact. If, however, the processor is Little-Endian, the macros will reorder the bytes appropriately. These macros are routinely called when building and parsing network packets and when socket connections are created. Serious run-time performance penalties occur when using TCP/IP on a Little-Endian processor. For that reason, it may be unwise to select a Little-Endian processor for use in a device, such as a router or gateway, with an abundance of network functionality. (Excerpt from reference &lt;a href=&quot;http://www.codeproject.com/KB/cpp/endianness.aspx#[1]&quot; style=&quot;border-bottom-color:rgb(0, 76, 213);border-left-color:rgb(0, 76, 213);border-right-color:rgb(0, 76, 213);border-top-color:rgb(0, 76, 213);color:rgb(0, 76, 213);cursor:pointer;-moz-column-rule-color:rgb(0, 76, 213);&quot;&gt;[1]&lt;/a&gt;).&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;background-attachment: scroll; background-color: transparent; background-image: none; border: 0px none rgb(0, 0, 0); border-collapse: separate; border-spacing: 0px; bottom: auto; caption-side: top; clear: none; clip: auto; color: rgb(0, 0, 0); content: none; counter-increment: none; counter-reset: none; cursor: auto; direction: ltr; display: block; empty-cells: show; float: none; font-family: Verdana, Arial, sans-serif; font-size: 13px; font-style: normal; font-variant: normal; font-weight: 400; height: auto; left: auto; letter-spacing: normal; list-style: disc outside none; margin: 13.3333px 0px; max-height: none; max-width: none; min-height: 0px; min-width: 0px; opacity: 1; outline: rgb(0, 0, 0) none 0px; outline-offset: 0px; overflow: visible; padding: 0px; page-break-after: auto; page-break-before: auto; pointer-events: auto; position: static; right: auto; table-layout: auto; text-align: start; text-decoration: none; text-indent: 0px; text-shadow: none; text-transform: none; top: auto; unicode-bidi: embed; vertical-align: baseline; visibility: visible; white-space: normal; width: auto; word-spacing: 0px; z-index: auto; background-clip: border-box; background-origin: padding-box; border-bottom-left-radius: 0px; border-bottom-right-radius: 0px; border-top-left-radius: 0px; border-top-right-radius: 0px; resize: none; word-wrap: normal; clip-path: none; clip-rule: nonzero; color-interpolation: srgb; color-interpolation-filters: linearrgb; dominant-baseline: auto; fill: #000000; fill-opacity: 1; fill-rule: nonzero; filter: none; flood-color: #000000; flood-opacity: 1; lighting-color: #ffffff; image-rendering: auto; mask: none; marker-end: none; marker-mid: none; marker-start: none; shape-rendering: auto; stop-color: #000000; stop-opacity: 1; stroke: none; stroke-dasharray: none; stroke-dashoffset: 0px; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-opacity: 1; stroke-width: 1px; text-anchor: start; text-rendering: auto; background-position: 0% 0%; background-repeat: repeat repeat;&quot;&gt;
&lt;div&gt;&lt;i&gt;One additional problem with the host-to-network APIs is that they are unable to manipulate 64-bit data elements.&lt;/i&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Solution 2: Use a Byte Order Mark (BOM)&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;The other approach is to include a magic number, such as 0xFEFF, before every piece of data. If you read the magic number and it is 0xFEFF, it means the data is in the same format as your machine, and all is well.&lt;/p&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;If you read the magic number and it is 0xFFFE (it is backwards), it means the data was written in a format different from your own. You&amp;#39;ll have to translate it.&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;&lt;span style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;BOM&lt;/span&gt; adds overhead to all data that is transmitted. Even if you are only sending 2 bytes of data, you need to include a 2-byte &lt;span style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;BOM.&lt;/span&gt; Ouch!&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;Unicode uses a &lt;span style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;BOM&lt;/span&gt; when storing multi-byte data (some Unicode character encodings can have 2, 3 or even 4-bytes per character). &lt;span style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;XML&lt;/span&gt; avoids this mess by storing data in &lt;span style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;UTF&lt;/span&gt;-8 by default, which stores Unicode information one byte at a time.&amp;nbsp;&lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;&lt;span style=&quot;color: rgb(130, 17, 34);&quot;&gt;&lt;span style=&quot;font-family: Georgia;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Why are there endian issues at all? Can&amp;#39;t we just get along?&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;&lt;br&gt;&lt;/div&gt;
&lt;div&gt;Each byte-order system has its advantages. Little-endian machines let you read the lowest-byte first, without reading the others. You can check whether a number is odd or even (last bit is 0) very easily, which is cool if you&amp;#39;re into that kind of thing. Big-endian systems store data in memory the same way we humans think about data (left-to-right), which makes low-level debugging easier.&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;border: 0pt none; font-family: inherit; font-style: inherit; font-weight: inherit; margin: 0pt 0pt 1em; outline: none 0pt; padding: 0pt; vertical-align: baseline;&quot;&gt;
&lt;div&gt;&lt;span style=&quot;font-size: 100%;&quot;&gt;Resources -&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;background-repeat: initial initial;border-top-width:0pt;border-right-width:0pt;border-bottom-width:0pt;border-left-width:0pt;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;border-top-color:initial;border-right-color:initial;border-bottom-color:initial;border-left-color:initial;border-image:initial;font-family:inherit;font-size:100%;font-style:inherit;font-weight:inherit;margin-top:0pt;margin-right:0pt;margin-bottom:0pt;margin-left:0pt;outline-width:0pt;outline-style:none;outline-color:initial;padding-top:0pt;padding-right:0pt;padding-bottom:0pt;padding-left:0pt;vertical-align:baseline;&quot;&gt;
&lt;div style=&quot;background-repeat: initial initial;border-top-width:1px;border-right-width:0pt;border-bottom-width:0pt;border-left-width:0pt;border-top-style:solid;border-right-style:none;border-bottom-style:none;border-left-style:none;border-top-color:rgb(204, 204, 204);border-right-color:initial;border-bottom-color:initial;border-left-color:initial;border-image:initial;font-family:inherit;font-size:100%;font-style:inherit;font-weight:inherit;margin-top:20px;margin-right:0pt;margin-bottom:0pt;margin-left:0pt;outline-width:0pt;outline-style:none;outline-color:initial;padding-top:20px;padding-right:0pt;padding-bottom:0pt;padding-left:0pt;vertical-align:baseline;width:68.9%;&quot;&gt;
&lt;div style=&quot;background-repeat: initial initial;border-top-width:0pt;border-right-width:0pt;border-bottom-width:0pt;border-left-width:0pt;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;border-top-color:initial;border-right-color:initial;border-bottom-color:initial;border-left-color:initial;border-image:initial;font-family:inherit;font-size:100%;font-style:inherit;font-weight:inherit;margin-top:0pt;margin-right:0pt;margin-bottom:0pt;margin-left:0pt;outline-width:0pt;outline-style:none;outline-color:initial;padding-top:0pt;padding-right:0pt;padding-bottom:0pt;padding-left:0pt;vertical-align:baseline;&quot;&gt;
&lt;div&gt;&lt;a href=&quot;http://betterexplained.com/articles/understanding-big-and-little-endian-byte-order/&quot;&gt;http://betterexplained.com/articles/understanding-big-and-little-endian-byte-order/&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://www.codeproject.com/KB/cpp/endianness.aspx&quot;&gt;http://www.codeproject.com/KB/cpp/endianness.aspx&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://people.cs.umass.edu/~verts/cs32/endian.html&quot;&gt;http://people.cs.umass.edu/~verts/cs32/endian.html&lt;/a&gt;&lt;/div&gt;
&lt;br clear=&quot;none&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;clear: both&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;/body&gt;&lt;/html&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Mar 2015 00:00:00 -0500</pubDate>
        <link>http://udaytv.github.io/Endianess/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Endianess/</guid>
      </item>
    
      <item>
        <title>Using spring boot for REST service using JPA</title>
        <description>&lt;p&gt;With &lt;a href=&quot;http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/&quot;&gt;spring-boot&lt;/a&gt; it is incredibly easy to create a JavaEE project using embedded container. Unlike Spring-ROO it is very easy to migrate to production environment. Without any boiler plate code you can be sure of not using deprecated spring api&amp;#39;s from wild. &lt;/p&gt;

&lt;p&gt;You can view complete source code on &lt;a href=&quot;https://github.com/dhval/spring-boot-rest&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;h5&gt;How to run this sample.&lt;/h5&gt;

&lt;p&gt;1.&lt;strong&gt;Using IDE.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is web (war) &lt;code&gt;mvn package&lt;/code&gt; package that can easily be deployed using your favorite Java IDE with a web container.&lt;/p&gt;

&lt;p&gt;You would need to create a JNDI Datasource, /var/lib/tomcat7/conf/context.xml. The JPA-Hibernate would take care of generating tables and sql-ddl. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;Resource auth=&amp;quot;Container&amp;quot; driverClassName=&amp;quot;com.mysql.jdbc.Driver&amp;quot; maxActive=&amp;quot;10&amp;quot; maxIdle=&amp;quot;5&amp;quot; maxWait=&amp;quot;1000&amp;quot; name=&amp;quot;jdbc/earth&amp;quot; type=&amp;quot;javax.sql.DataSource&amp;quot; maxAge=&amp;quot;180000&amp;quot; testOnBorrow=&amp;quot;true&amp;quot; testWhileIdle=&amp;quot;true&amp;quot; validationInterval=&amp;quot;0&amp;quot; url=&amp;quot;jdbc:mysql://localhost:3306/motherearth?autoReconnect=true&amp;quot; username=&amp;quot;user&amp;quot; password=&amp;quot;password&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.&lt;strong&gt;Command Line&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To run using spring boot, &lt;code&gt;mvn spring-boot:run&lt;/code&gt;. Embedded server do not have any JNDI by default, you can create it &lt;a href=&quot;http://stackoverflow.com/questions/24941829/how-to-create-jndi-context-in-spring-boot-with-embedded-tomcat-container&quot;&gt;programmatically&lt;/a&gt; or just use plain datasource as follows. &lt;/p&gt;

&lt;p&gt;Update pom.xml packaging to jar.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instead of using JNDI-Datasource &lt;code&gt;spring.datasource.jndi-name&lt;/code&gt;, define your connection parameters in application.properties file. &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://${mysql.host}:${mysql.port}/${mysql.database-name}?autoReconnect=true
spring.datasource.username=${mysql.user}
spring.datasource.password=${mysql.pass}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Mon, 27 Oct 2014 00:00:00 -0400</pubDate>
        <link>http://udaytv.github.io/Spring-Boot-REST/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Spring-Boot-REST/</guid>
      </item>
    
      <item>
        <title>From Java web jar to bower registry</title>
        <description>&lt;p&gt;Java web jars provide static resources for web projects, it supports very good integration with maven (or gradle) by creating overlays that can be unzipped and used inside war. Maven war plugin makes this drop-dead simple.&lt;/p&gt;

&lt;p&gt;By using &lt;a href=&quot;http://bower.io/&quot;&gt;bower&lt;/a&gt; you can manage all your web resources much easier, it is significantly easier to update dependecies to newer versions. It start to make more sense if you use node-grunt tooling instead of hacking your way around maven with bunch of odd custom shell scripts. &lt;/p&gt;

&lt;p&gt;Once you start using bower then it is time to eat your own dog food. Bower facilitates you to publish your web resources (internally or externally) to a git server, all you have to do is &amp;#39;git tag&amp;#39; and push your files. Bower look at tarballs associted with tags to infer version.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;quot;dependencies&amp;quot;: {
    &amp;quot;json3&amp;quot;: &amp;quot;^3.3.0&amp;quot;,
        ....
    &amp;quot;common&amp;quot;: &amp;quot;git://github.com/user/base-web.git&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can reference dependency from another git project like below, notice .git/ at end.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;quot;dependencies&amp;quot;: {
    &amp;quot;json3&amp;quot;: &amp;quot;^3.3.0&amp;quot;,
        ....
    &amp;quot;common&amp;quot;: &amp;quot;/Users/dhval/java/git-repository/jnet/base-web/.git/&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is a sample flow of publishing a existing github project as npm registry.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git tag &amp;quot;v0.0.0&amp;quot;
git push origin --tags

bower register common git://github.com/user/base-web.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To automate above steps you can use &lt;a href=&quot;https://github.com/vojtajina/grunt-bump&quot;&gt;grunt-bump&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;grunt.initConfig({
bump: {
    options: {
        files: [
            &amp;quot;package.json&amp;quot;,
            &amp;quot;bower.json&amp;quot;
        ],
        push: &amp;quot;true&amp;quot;,
        pushTo: &amp;#39;origin&amp;#39;
    }
}
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Time to tell &lt;a href=&quot;http://maven.apache.org/plugins/maven-war-plugin/index.html&quot;&gt;maven-war-plugin&lt;/a&gt; to copy all resources from Project_Root/dist into exploded-war directory. So that all maven based IDE like IntelliJ can create war naturally. Note web resources are different from regular resources like xml, properties, schema beans etc. You use &lt;a href=&quot;https://maven.apache.org/plugins/maven-resources-plugin/index.html&quot;&gt;maven-resources-plugin&lt;/a&gt; and &lt;code&gt;mvn resources:copy-resources&lt;/code&gt; for them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before&lt;/strong&gt; &lt;code&gt;mvn war:exploded&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Root
|---dist
    |---common &amp;lt;!-- Bower created internal resources here--&amp;gt;
    |---....
    |---json3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;After&lt;/strong&gt; I need my internal dependencies in web/{ js| css} and external dependencies in web/dist/dependency-name/ with their licenses.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;target
|---&amp;lt;app-name&amp;gt;
    |
    |----dist/json3
    |----js/common
    |----css/common
    |----css/img
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We need to add &lt;code&gt;webReources&lt;/code&gt; element in our war-plugin config.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;build&amp;gt;
&amp;lt;plugins&amp;gt;   
&amp;lt;plugin&amp;gt;
&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;maven-war-plugin&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;2.3&amp;lt;/version&amp;gt;
&amp;lt;configuration&amp;gt;
    &amp;lt;archive&amp;gt;
        &amp;lt;manifest&amp;gt;
            &amp;lt;classpathPrefix&amp;gt;WEB-INF/lib/&amp;lt;/classpathPrefix&amp;gt;
            &amp;lt;addClasspath&amp;gt;true&amp;lt;/addClasspath&amp;gt;
        &amp;lt;/manifest&amp;gt;
    &amp;lt;/archive&amp;gt;
    &amp;lt;!-- Filter, replace properties with values. --&amp;gt;
    &amp;lt;filters&amp;gt;
        &amp;lt;filter&amp;gt;src/main/resources/application.properties&amp;lt;/filter&amp;gt;
    &amp;lt;/filters&amp;gt;
    &amp;lt;nonFilteredFileExtensions&amp;gt;
        &amp;lt;!-- default value contains jpg,jpeg,gif,bmp,png --&amp;gt;
        &amp;lt;nonFilteredFileExtension&amp;gt;pdf&amp;lt;/nonFilteredFileExtension&amp;gt;
    &amp;lt;/nonFilteredFileExtensions&amp;gt;
    &amp;lt;!-- Copy resources to different directories. --&amp;gt;
    &amp;lt;webResources&amp;gt;
        &amp;lt;resource&amp;gt;
            &amp;lt;excludes&amp;gt;
                &amp;lt;exclude&amp;gt;**/common/**&amp;lt;/exclude&amp;gt;
            &amp;lt;/excludes&amp;gt;
            &amp;lt;directory&amp;gt;dist&amp;lt;/directory&amp;gt;
            &amp;lt;targetPath&amp;gt;dist&amp;lt;/targetPath&amp;gt;
            &amp;lt;!-- it&amp;#39;s not a good idea to filter binary files --&amp;gt;
            &amp;lt;filtering&amp;gt;false&amp;lt;/filtering&amp;gt;
        &amp;lt;/resource&amp;gt;
        &amp;lt;resource&amp;gt;
            &amp;lt;directory&amp;gt;dist/common/js&amp;lt;/directory&amp;gt;
            &amp;lt;targetPath&amp;gt;js/common&amp;lt;/targetPath&amp;gt;
            &amp;lt;filtering&amp;gt;false&amp;lt;/filtering&amp;gt;
        &amp;lt;/resource&amp;gt;
        &amp;lt;resource&amp;gt;
            &amp;lt;directory&amp;gt;dist/common/css&amp;lt;/directory&amp;gt;
            &amp;lt;targetPath&amp;gt;css/common&amp;lt;/targetPath&amp;gt;
            &amp;lt;filtering&amp;gt;false&amp;lt;/filtering&amp;gt;
        &amp;lt;/resource&amp;gt;
        &amp;lt;resource&amp;gt;
            &amp;lt;directory&amp;gt;dist/common/img&amp;lt;/directory&amp;gt;
            &amp;lt;targetPath&amp;gt;css/img&amp;lt;/targetPath&amp;gt;
            &amp;lt;filtering&amp;gt;false&amp;lt;/filtering&amp;gt;
        &amp;lt;/resource&amp;gt;
    &amp;lt;/webResources&amp;gt;
&amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;
&amp;lt;/plugins&amp;gt;
&amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Sat, 02 Aug 2014 00:00:00 -0400</pubDate>
        <link>http://udaytv.github.io/Bower-Registry/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Bower-Registry/</guid>
      </item>
    
      <item>
        <title>Using spring property place holder</title>
        <description>&lt;p&gt;We all freqently, use spring property holder in our spring based applications. But there are few cavets that are worth revisiting.&lt;/p&gt;

&lt;p&gt;Old Way&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;context:property-placeholder location=&amp;quot;application.properties&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Spring 3.1&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;---spring.xml---

&amp;lt;bean class=&amp;quot;org.springframework.context.support.PropertySourcesPlaceholderConfigurer&amp;quot;&amp;gt;
  &amp;lt;property name=&amp;quot;locations&amp;quot;&amp;gt;
   &amp;lt;list&amp;gt;
    &amp;lt;value&amp;gt;classpath:application.properties&amp;lt;/value&amp;gt;
    &amp;lt;value&amp;gt;classpath:rabbitmq.properties&amp;lt;/value&amp;gt;
   &amp;lt;/list&amp;gt;
&amp;lt;/property&amp;gt;
  &amp;lt;property name=&amp;quot;ignoreUnresolvablePlaceholders&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;
&amp;lt;/bean&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The real goodness happens below. The @Autowired together with @Value let spring initilize component with w/o no argument constructor. Note &amp;#39;:&amp;#39; in @Value is used to specify default value.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;@Component
public class QueueConsumer extends EndPoint implements Runnable, Consumer {

    @Autowired
    public QueueConsumer( @Value(&amp;quot;${rabbit.host:192.168.0.112}&amp;quot;) String host,
                          @Value(&amp;quot;${rabbit.endpoint:queue}&amp;quot;) String endPointName) throws IOException{
        super(host, endPointName);
    }

...
}    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And lastly, obtaining properties via the new Environment APIs.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;@Autowired
private Environment env;

dataSource.setUrl(env.getProperty(&amp;quot;jdbc.url&amp;quot;));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://www.baeldung.com/2012/02/06/properties-with-spring/&quot;&gt;Read ...&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Mar 2014 00:00:00 -0500</pubDate>
        <link>http://udaytv.github.io/Spring-Property-PlaceHolder/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Spring-Property-PlaceHolder/</guid>
      </item>
    
      <item>
        <title>Jekyll post.excerpt layout</title>
        <description>&lt;p&gt;I was able to build this blog using Jekyll in less than an hour. Run into setting up posts and found quick answer on Stack Overflow.&lt;/p&gt;

&lt;p&gt;The easiest way to setup you your post headers is to add below yml at the top of your page. This is will override everything else.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;---
layout: post
title: Jekyll post.excerpt layout
date: 4 March, 2010
excerpt: I was able to build this blog using Jekyll ...
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/posts/#post-excerpts&quot;&gt;Read Documentation&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 01 Mar 2014 00:00:00 -0500</pubDate>
        <link>http://udaytv.github.io/Jekyll-Post-Layout/</link>
        <guid isPermaLink="true">http://udaytv.github.io/Jekyll-Post-Layout/</guid>
      </item>
    
  </channel>
</rss>